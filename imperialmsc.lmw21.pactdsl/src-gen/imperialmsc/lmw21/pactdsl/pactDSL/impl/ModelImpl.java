/**
 * generated by Xtext 2.25.0
 */
package imperialmsc.lmw21.pactdsl.pactDSL.impl;

import imperialmsc.lmw21.pactdsl.pactDSL.ActionType;
import imperialmsc.lmw21.pactdsl.pactDSL.BoilerplateType;
import imperialmsc.lmw21.pactdsl.pactDSL.EntityType;
import imperialmsc.lmw21.pactdsl.pactDSL.FormalityType;
import imperialmsc.lmw21.pactdsl.pactDSL.Model;
import imperialmsc.lmw21.pactdsl.pactDSL.PactDSLPackage;
import imperialmsc.lmw21.pactdsl.pactDSL.PrimaryObligationType;
import imperialmsc.lmw21.pactdsl.pactDSL.StateType;
import imperialmsc.lmw21.pactdsl.pactDSL.TerminationType;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link imperialmsc.lmw21.pactdsl.pactDSL.impl.ModelImpl#getTitle <em>Title</em>}</li>
 *   <li>{@link imperialmsc.lmw21.pactdsl.pactDSL.impl.ModelImpl#getEntityTypes <em>Entity Types</em>}</li>
 *   <li>{@link imperialmsc.lmw21.pactdsl.pactDSL.impl.ModelImpl#getFormalityTypes <em>Formality Types</em>}</li>
 *   <li>{@link imperialmsc.lmw21.pactdsl.pactDSL.impl.ModelImpl#getActionTypes <em>Action Types</em>}</li>
 *   <li>{@link imperialmsc.lmw21.pactdsl.pactDSL.impl.ModelImpl#getStateTypes <em>State Types</em>}</li>
 *   <li>{@link imperialmsc.lmw21.pactdsl.pactDSL.impl.ModelImpl#getPrimaryObligationTypes <em>Primary Obligation Types</em>}</li>
 *   <li>{@link imperialmsc.lmw21.pactdsl.pactDSL.impl.ModelImpl#getTerminationTypes <em>Termination Types</em>}</li>
 *   <li>{@link imperialmsc.lmw21.pactdsl.pactDSL.impl.ModelImpl#getBoilerplateTypes <em>Boilerplate Types</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelImpl extends MinimalEObjectImpl.Container implements Model
{
  /**
   * The default value of the '{@link #getTitle() <em>Title</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTitle()
   * @generated
   * @ordered
   */
  protected static final String TITLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTitle() <em>Title</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTitle()
   * @generated
   * @ordered
   */
  protected String title = TITLE_EDEFAULT;

  /**
   * The cached value of the '{@link #getEntityTypes() <em>Entity Types</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntityTypes()
   * @generated
   * @ordered
   */
  protected EList<EntityType> entityTypes;

  /**
   * The cached value of the '{@link #getFormalityTypes() <em>Formality Types</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFormalityTypes()
   * @generated
   * @ordered
   */
  protected EList<FormalityType> formalityTypes;

  /**
   * The cached value of the '{@link #getActionTypes() <em>Action Types</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActionTypes()
   * @generated
   * @ordered
   */
  protected EList<ActionType> actionTypes;

  /**
   * The cached value of the '{@link #getStateTypes() <em>State Types</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStateTypes()
   * @generated
   * @ordered
   */
  protected EList<StateType> stateTypes;

  /**
   * The cached value of the '{@link #getPrimaryObligationTypes() <em>Primary Obligation Types</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrimaryObligationTypes()
   * @generated
   * @ordered
   */
  protected EList<PrimaryObligationType> primaryObligationTypes;

  /**
   * The cached value of the '{@link #getTerminationTypes() <em>Termination Types</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTerminationTypes()
   * @generated
   * @ordered
   */
  protected EList<TerminationType> terminationTypes;

  /**
   * The cached value of the '{@link #getBoilerplateTypes() <em>Boilerplate Types</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBoilerplateTypes()
   * @generated
   * @ordered
   */
  protected EList<BoilerplateType> boilerplateTypes;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PactDSLPackage.Literals.MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTitle()
  {
    return title;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTitle(String newTitle)
  {
    String oldTitle = title;
    title = newTitle;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PactDSLPackage.MODEL__TITLE, oldTitle, title));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<EntityType> getEntityTypes()
  {
    if (entityTypes == null)
    {
      entityTypes = new EObjectContainmentEList<EntityType>(EntityType.class, this, PactDSLPackage.MODEL__ENTITY_TYPES);
    }
    return entityTypes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<FormalityType> getFormalityTypes()
  {
    if (formalityTypes == null)
    {
      formalityTypes = new EObjectContainmentEList<FormalityType>(FormalityType.class, this, PactDSLPackage.MODEL__FORMALITY_TYPES);
    }
    return formalityTypes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ActionType> getActionTypes()
  {
    if (actionTypes == null)
    {
      actionTypes = new EObjectContainmentEList<ActionType>(ActionType.class, this, PactDSLPackage.MODEL__ACTION_TYPES);
    }
    return actionTypes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<StateType> getStateTypes()
  {
    if (stateTypes == null)
    {
      stateTypes = new EObjectContainmentEList<StateType>(StateType.class, this, PactDSLPackage.MODEL__STATE_TYPES);
    }
    return stateTypes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<PrimaryObligationType> getPrimaryObligationTypes()
  {
    if (primaryObligationTypes == null)
    {
      primaryObligationTypes = new EObjectContainmentEList<PrimaryObligationType>(PrimaryObligationType.class, this, PactDSLPackage.MODEL__PRIMARY_OBLIGATION_TYPES);
    }
    return primaryObligationTypes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<TerminationType> getTerminationTypes()
  {
    if (terminationTypes == null)
    {
      terminationTypes = new EObjectContainmentEList<TerminationType>(TerminationType.class, this, PactDSLPackage.MODEL__TERMINATION_TYPES);
    }
    return terminationTypes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<BoilerplateType> getBoilerplateTypes()
  {
    if (boilerplateTypes == null)
    {
      boilerplateTypes = new EObjectContainmentEList<BoilerplateType>(BoilerplateType.class, this, PactDSLPackage.MODEL__BOILERPLATE_TYPES);
    }
    return boilerplateTypes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PactDSLPackage.MODEL__ENTITY_TYPES:
        return ((InternalEList<?>)getEntityTypes()).basicRemove(otherEnd, msgs);
      case PactDSLPackage.MODEL__FORMALITY_TYPES:
        return ((InternalEList<?>)getFormalityTypes()).basicRemove(otherEnd, msgs);
      case PactDSLPackage.MODEL__ACTION_TYPES:
        return ((InternalEList<?>)getActionTypes()).basicRemove(otherEnd, msgs);
      case PactDSLPackage.MODEL__STATE_TYPES:
        return ((InternalEList<?>)getStateTypes()).basicRemove(otherEnd, msgs);
      case PactDSLPackage.MODEL__PRIMARY_OBLIGATION_TYPES:
        return ((InternalEList<?>)getPrimaryObligationTypes()).basicRemove(otherEnd, msgs);
      case PactDSLPackage.MODEL__TERMINATION_TYPES:
        return ((InternalEList<?>)getTerminationTypes()).basicRemove(otherEnd, msgs);
      case PactDSLPackage.MODEL__BOILERPLATE_TYPES:
        return ((InternalEList<?>)getBoilerplateTypes()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PactDSLPackage.MODEL__TITLE:
        return getTitle();
      case PactDSLPackage.MODEL__ENTITY_TYPES:
        return getEntityTypes();
      case PactDSLPackage.MODEL__FORMALITY_TYPES:
        return getFormalityTypes();
      case PactDSLPackage.MODEL__ACTION_TYPES:
        return getActionTypes();
      case PactDSLPackage.MODEL__STATE_TYPES:
        return getStateTypes();
      case PactDSLPackage.MODEL__PRIMARY_OBLIGATION_TYPES:
        return getPrimaryObligationTypes();
      case PactDSLPackage.MODEL__TERMINATION_TYPES:
        return getTerminationTypes();
      case PactDSLPackage.MODEL__BOILERPLATE_TYPES:
        return getBoilerplateTypes();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PactDSLPackage.MODEL__TITLE:
        setTitle((String)newValue);
        return;
      case PactDSLPackage.MODEL__ENTITY_TYPES:
        getEntityTypes().clear();
        getEntityTypes().addAll((Collection<? extends EntityType>)newValue);
        return;
      case PactDSLPackage.MODEL__FORMALITY_TYPES:
        getFormalityTypes().clear();
        getFormalityTypes().addAll((Collection<? extends FormalityType>)newValue);
        return;
      case PactDSLPackage.MODEL__ACTION_TYPES:
        getActionTypes().clear();
        getActionTypes().addAll((Collection<? extends ActionType>)newValue);
        return;
      case PactDSLPackage.MODEL__STATE_TYPES:
        getStateTypes().clear();
        getStateTypes().addAll((Collection<? extends StateType>)newValue);
        return;
      case PactDSLPackage.MODEL__PRIMARY_OBLIGATION_TYPES:
        getPrimaryObligationTypes().clear();
        getPrimaryObligationTypes().addAll((Collection<? extends PrimaryObligationType>)newValue);
        return;
      case PactDSLPackage.MODEL__TERMINATION_TYPES:
        getTerminationTypes().clear();
        getTerminationTypes().addAll((Collection<? extends TerminationType>)newValue);
        return;
      case PactDSLPackage.MODEL__BOILERPLATE_TYPES:
        getBoilerplateTypes().clear();
        getBoilerplateTypes().addAll((Collection<? extends BoilerplateType>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PactDSLPackage.MODEL__TITLE:
        setTitle(TITLE_EDEFAULT);
        return;
      case PactDSLPackage.MODEL__ENTITY_TYPES:
        getEntityTypes().clear();
        return;
      case PactDSLPackage.MODEL__FORMALITY_TYPES:
        getFormalityTypes().clear();
        return;
      case PactDSLPackage.MODEL__ACTION_TYPES:
        getActionTypes().clear();
        return;
      case PactDSLPackage.MODEL__STATE_TYPES:
        getStateTypes().clear();
        return;
      case PactDSLPackage.MODEL__PRIMARY_OBLIGATION_TYPES:
        getPrimaryObligationTypes().clear();
        return;
      case PactDSLPackage.MODEL__TERMINATION_TYPES:
        getTerminationTypes().clear();
        return;
      case PactDSLPackage.MODEL__BOILERPLATE_TYPES:
        getBoilerplateTypes().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PactDSLPackage.MODEL__TITLE:
        return TITLE_EDEFAULT == null ? title != null : !TITLE_EDEFAULT.equals(title);
      case PactDSLPackage.MODEL__ENTITY_TYPES:
        return entityTypes != null && !entityTypes.isEmpty();
      case PactDSLPackage.MODEL__FORMALITY_TYPES:
        return formalityTypes != null && !formalityTypes.isEmpty();
      case PactDSLPackage.MODEL__ACTION_TYPES:
        return actionTypes != null && !actionTypes.isEmpty();
      case PactDSLPackage.MODEL__STATE_TYPES:
        return stateTypes != null && !stateTypes.isEmpty();
      case PactDSLPackage.MODEL__PRIMARY_OBLIGATION_TYPES:
        return primaryObligationTypes != null && !primaryObligationTypes.isEmpty();
      case PactDSLPackage.MODEL__TERMINATION_TYPES:
        return terminationTypes != null && !terminationTypes.isEmpty();
      case PactDSLPackage.MODEL__BOILERPLATE_TYPES:
        return boilerplateTypes != null && !boilerplateTypes.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (title: ");
    result.append(title);
    result.append(')');
    return result.toString();
  }

} //ModelImpl
