/**
 * generated by Xtext 2.25.0
 */
package imperialmsc.lmw21.pactdsl.pactDSL.util;

import imperialmsc.lmw21.pactdsl.pactDSL.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see imperialmsc.lmw21.pactdsl.pactDSL.PactDSLPackage
 * @generated
 */
public class PactDSLSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static PactDSLPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PactDSLSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = PactDSLPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case PactDSLPackage.MODEL:
      {
        Model model = (Model)theEObject;
        T result = caseModel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.ENTITY_TYPE:
      {
        EntityType entityType = (EntityType)theEObject;
        T result = caseEntityType(entityType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.EFFECTIVE_DATE:
      {
        EffectiveDate effectiveDate = (EffectiveDate)theEObject;
        T result = caseEffectiveDate(effectiveDate);
        if (result == null) result = caseEntityType(effectiveDate);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.PARTY:
      {
        Party party = (Party)theEObject;
        T result = caseParty(party);
        if (result == null) result = caseEntityType(party);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.THIRD_PARTY:
      {
        ThirdParty thirdParty = (ThirdParty)theEObject;
        T result = caseThirdParty(thirdParty);
        if (result == null) result = caseEntityType(thirdParty);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.SUBJECT_MATTER:
      {
        SubjectMatter subjectMatter = (SubjectMatter)theEObject;
        T result = caseSubjectMatter(subjectMatter);
        if (result == null) result = caseEntityType(subjectMatter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.FEATURE:
      {
        Feature feature = (Feature)theEObject;
        T result = caseFeature(feature);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.FEATURE_TYPE:
      {
        FeatureType featureType = (FeatureType)theEObject;
        T result = caseFeatureType(featureType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.DEFINED_TERM:
      {
        DefinedTerm definedTerm = (DefinedTerm)theEObject;
        T result = caseDefinedTerm(definedTerm);
        if (result == null) result = caseFeatureType(definedTerm);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.ADDRESS:
      {
        Address address = (Address)theEObject;
        T result = caseAddress(address);
        if (result == null) result = caseFeatureType(address);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.COMPANY_NUMBER:
      {
        CompanyNumber companyNumber = (CompanyNumber)theEObject;
        T result = caseCompanyNumber(companyNumber);
        if (result == null) result = caseFeatureType(companyNumber);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.CUSTOM_FEATURE:
      {
        CustomFeature customFeature = (CustomFeature)theEObject;
        T result = caseCustomFeature(customFeature);
        if (result == null) result = caseFeatureType(customFeature);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.FORMALITY_TYPE:
      {
        FormalityType formalityType = (FormalityType)theEObject;
        T result = caseFormalityType(formalityType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.IN_WRITING:
      {
        InWriting inWriting = (InWriting)theEObject;
        T result = caseInWriting(inWriting);
        if (result == null) result = caseFormalityType(inWriting);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.BY_EMAIL:
      {
        ByEmail byEmail = (ByEmail)theEObject;
        T result = caseByEmail(byEmail);
        if (result == null) result = caseFormalityType(byEmail);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.GIVING_NOTICE:
      {
        GivingNotice givingNotice = (GivingNotice)theEObject;
        T result = caseGivingNotice(givingNotice);
        if (result == null) result = caseFormalityType(givingNotice);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.CUSTOM_FORMALITY:
      {
        CustomFormality customFormality = (CustomFormality)theEObject;
        T result = caseCustomFormality(customFormality);
        if (result == null) result = caseFormalityType(customFormality);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.ACTION_TYPE:
      {
        ActionType actionType = (ActionType)theEObject;
        T result = caseActionType(actionType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.GIVEN_CONSENT:
      {
        GivenConsent givenConsent = (GivenConsent)theEObject;
        T result = caseGivenConsent(givenConsent);
        if (result == null) result = caseActionType(givenConsent);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.GIVEN_WRITTEN_CONSENT:
      {
        GivenWrittenConsent givenWrittenConsent = (GivenWrittenConsent)theEObject;
        T result = caseGivenWrittenConsent(givenWrittenConsent);
        if (result == null) result = caseActionType(givenWrittenConsent);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.CUSTOM_ACTION:
      {
        CustomAction customAction = (CustomAction)theEObject;
        T result = caseCustomAction(customAction);
        if (result == null) result = caseActionType(customAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.STATE_TYPE:
      {
        StateType stateType = (StateType)theEObject;
        T result = caseStateType(stateType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.OWNERSHIP:
      {
        Ownership ownership = (Ownership)theEObject;
        T result = caseOwnership(ownership);
        if (result == null) result = caseStateType(ownership);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.RIGHT_TO_USE:
      {
        RightToUse rightToUse = (RightToUse)theEObject;
        T result = caseRightToUse(rightToUse);
        if (result == null) result = caseStateType(rightToUse);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.CUSTOM_STATE:
      {
        CustomState customState = (CustomState)theEObject;
        T result = caseCustomState(customState);
        if (result == null) result = caseStateType(customState);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.PRIMARY_OBLIGATION_TYPE:
      {
        PrimaryObligationType primaryObligationType = (PrimaryObligationType)theEObject;
        T result = casePrimaryObligationType(primaryObligationType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.PAYMENT_OBLIGATION:
      {
        PaymentObligation paymentObligation = (PaymentObligation)theEObject;
        T result = casePaymentObligation(paymentObligation);
        if (result == null) result = casePrimaryObligationType(paymentObligation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.DELIVERY_OBLIGATION:
      {
        DeliveryObligation deliveryObligation = (DeliveryObligation)theEObject;
        T result = caseDeliveryObligation(deliveryObligation);
        if (result == null) result = casePrimaryObligationType(deliveryObligation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.TRANSFER_OBLIGATION:
      {
        TransferObligation transferObligation = (TransferObligation)theEObject;
        T result = caseTransferObligation(transferObligation);
        if (result == null) result = casePrimaryObligationType(transferObligation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.LICENCE_OBLIGATION:
      {
        LicenceObligation licenceObligation = (LicenceObligation)theEObject;
        T result = caseLicenceObligation(licenceObligation);
        if (result == null) result = casePrimaryObligationType(licenceObligation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.CONSTRAINT_PARTY:
      {
        ConstraintParty constraintParty = (ConstraintParty)theEObject;
        T result = caseConstraintParty(constraintParty);
        if (result == null) result = casePrimaryObligationType(constraintParty);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.CONSTRAINT_THIRD_PARTY:
      {
        ConstraintThirdParty constraintThirdParty = (ConstraintThirdParty)theEObject;
        T result = caseConstraintThirdParty(constraintThirdParty);
        if (result == null) result = casePrimaryObligationType(constraintThirdParty);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.CUSTOM_OBLIGATION:
      {
        CustomObligation customObligation = (CustomObligation)theEObject;
        T result = caseCustomObligation(customObligation);
        if (result == null) result = casePrimaryObligationType(customObligation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.SECONDARY_OBLIGATION_TYPE:
      {
        SecondaryObligationType secondaryObligationType = (SecondaryObligationType)theEObject;
        T result = caseSecondaryObligationType(secondaryObligationType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.LIABILITY_TYPE:
      {
        LiabilityType liabilityType = (LiabilityType)theEObject;
        T result = caseLiabilityType(liabilityType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.LIABILITY_TO_PARTY:
      {
        LiabilityToParty liabilityToParty = (LiabilityToParty)theEObject;
        T result = caseLiabilityToParty(liabilityToParty);
        if (result == null) result = caseLiabilityType(liabilityToParty);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.LIABILITY_TO_THIRD_PARTY:
      {
        LiabilityToThirdParty liabilityToThirdParty = (LiabilityToThirdParty)theEObject;
        T result = caseLiabilityToThirdParty(liabilityToThirdParty);
        if (result == null) result = caseLiabilityType(liabilityToThirdParty);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.TERMINATION_TYPE:
      {
        TerminationType terminationType = (TerminationType)theEObject;
        T result = caseTerminationType(terminationType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.FOR_CONVENIENCE:
      {
        ForConvenience forConvenience = (ForConvenience)theEObject;
        T result = caseForConvenience(forConvenience);
        if (result == null) result = caseTerminationType(forConvenience);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.ON_REASONABLE_NOTICE:
      {
        OnReasonableNotice onReasonableNotice = (OnReasonableNotice)theEObject;
        T result = caseOnReasonableNotice(onReasonableNotice);
        if (result == null) result = caseTerminationType(onReasonableNotice);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.FOR_BREACH:
      {
        ForBreach forBreach = (ForBreach)theEObject;
        T result = caseForBreach(forBreach);
        if (result == null) result = caseTerminationType(forBreach);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.ON_INSOLVENCY_EVENT:
      {
        OnInsolvencyEvent onInsolvencyEvent = (OnInsolvencyEvent)theEObject;
        T result = caseOnInsolvencyEvent(onInsolvencyEvent);
        if (result == null) result = caseTerminationType(onInsolvencyEvent);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.CUSTOM_TERMINATION:
      {
        CustomTermination customTermination = (CustomTermination)theEObject;
        T result = caseCustomTermination(customTermination);
        if (result == null) result = caseTerminationType(customTermination);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.BOILERPLATE_TYPE:
      {
        BoilerplateType boilerplateType = (BoilerplateType)theEObject;
        T result = caseBoilerplateType(boilerplateType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.APPLICABLE_LAW:
      {
        ApplicableLaw applicableLaw = (ApplicableLaw)theEObject;
        T result = caseApplicableLaw(applicableLaw);
        if (result == null) result = caseBoilerplateType(applicableLaw);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.JURISDICTION:
      {
        Jurisdiction jurisdiction = (Jurisdiction)theEObject;
        T result = caseJurisdiction(jurisdiction);
        if (result == null) result = caseBoilerplateType(jurisdiction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.NOTICES:
      {
        Notices notices = (Notices)theEObject;
        T result = caseNotices(notices);
        if (result == null) result = caseBoilerplateType(notices);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case PactDSLPackage.CUSTOM_BOILERPLATE:
      {
        CustomBoilerplate customBoilerplate = (CustomBoilerplate)theEObject;
        T result = caseCustomBoilerplate(customBoilerplate);
        if (result == null) result = caseBoilerplateType(customBoilerplate);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntityType(EntityType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Effective Date</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Effective Date</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEffectiveDate(EffectiveDate object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Party</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Party</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseParty(Party object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Third Party</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Third Party</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseThirdParty(ThirdParty object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Subject Matter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Subject Matter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSubjectMatter(SubjectMatter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Feature</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Feature</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFeature(Feature object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Feature Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Feature Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFeatureType(FeatureType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Defined Term</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Defined Term</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDefinedTerm(DefinedTerm object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Address</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Address</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAddress(Address object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Company Number</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Company Number</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCompanyNumber(CompanyNumber object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Custom Feature</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Custom Feature</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCustomFeature(CustomFeature object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Formality Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Formality Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFormalityType(FormalityType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>In Writing</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>In Writing</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInWriting(InWriting object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>By Email</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>By Email</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseByEmail(ByEmail object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Giving Notice</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Giving Notice</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGivingNotice(GivingNotice object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Custom Formality</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Custom Formality</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCustomFormality(CustomFormality object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Action Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Action Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseActionType(ActionType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Given Consent</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Given Consent</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGivenConsent(GivenConsent object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Given Written Consent</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Given Written Consent</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGivenWrittenConsent(GivenWrittenConsent object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Custom Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Custom Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCustomAction(CustomAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>State Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>State Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStateType(StateType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Ownership</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Ownership</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOwnership(Ownership object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Right To Use</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Right To Use</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRightToUse(RightToUse object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Custom State</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Custom State</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCustomState(CustomState object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Primary Obligation Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Primary Obligation Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePrimaryObligationType(PrimaryObligationType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Payment Obligation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Payment Obligation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePaymentObligation(PaymentObligation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Delivery Obligation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Delivery Obligation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDeliveryObligation(DeliveryObligation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Transfer Obligation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Transfer Obligation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTransferObligation(TransferObligation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Licence Obligation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Licence Obligation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLicenceObligation(LicenceObligation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Constraint Party</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Constraint Party</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConstraintParty(ConstraintParty object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Constraint Third Party</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Constraint Third Party</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConstraintThirdParty(ConstraintThirdParty object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Custom Obligation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Custom Obligation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCustomObligation(CustomObligation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Secondary Obligation Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Secondary Obligation Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSecondaryObligationType(SecondaryObligationType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Liability Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Liability Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLiabilityType(LiabilityType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Liability To Party</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Liability To Party</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLiabilityToParty(LiabilityToParty object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Liability To Third Party</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Liability To Third Party</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLiabilityToThirdParty(LiabilityToThirdParty object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Termination Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Termination Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTerminationType(TerminationType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>For Convenience</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>For Convenience</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseForConvenience(ForConvenience object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>On Reasonable Notice</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>On Reasonable Notice</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOnReasonableNotice(OnReasonableNotice object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>For Breach</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>For Breach</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseForBreach(ForBreach object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>On Insolvency Event</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>On Insolvency Event</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOnInsolvencyEvent(OnInsolvencyEvent object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Custom Termination</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Custom Termination</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCustomTermination(CustomTermination object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Boilerplate Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Boilerplate Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBoilerplateType(BoilerplateType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Applicable Law</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Applicable Law</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseApplicableLaw(ApplicableLaw object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Jurisdiction</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Jurisdiction</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJurisdiction(Jurisdiction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Notices</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Notices</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNotices(Notices object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Custom Boilerplate</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Custom Boilerplate</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCustomBoilerplate(CustomBoilerplate object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //PactDSLSwitch
