/*
 * generated by Xtext 2.25.0
 */
package imperialmsc.lmw21.pactdsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class PactDSLGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContractTitleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTitleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTitleSTRINGTerminalRuleCall_1_0 = (RuleCall)cTitleAssignment_1.eContents().get(0);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEntitiesKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cEntityTypesAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cEntityTypesEntityTypeParserRuleCall_4_0_0 = (RuleCall)cEntityTypesAssignment_4_0.eContents().get(0);
		private final Keyword cFullStopKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Keyword cFormalitiesKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cFormalityTypesAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cFormalityTypesFormalityTypeParserRuleCall_6_0_0 = (RuleCall)cFormalityTypesAssignment_6_0.eContents().get(0);
		private final Keyword cFullStopKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cActionsKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Assignment cActionTypesAssignment_8_0 = (Assignment)cGroup_8.eContents().get(0);
		private final RuleCall cActionTypesActionTypeParserRuleCall_8_0_0 = (RuleCall)cActionTypesAssignment_8_0.eContents().get(0);
		private final Keyword cFullStopKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Keyword cStateOnSignatureKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Assignment cStateTypesAssignment_10_0 = (Assignment)cGroup_10.eContents().get(0);
		private final RuleCall cStateTypesStateTypeParserRuleCall_10_0_0 = (RuleCall)cStateTypesAssignment_10_0.eContents().get(0);
		private final Keyword cFullStopKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Keyword cPrimaryObligationsKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Assignment cPrimaryObligationTypesAssignment_12_0 = (Assignment)cGroup_12.eContents().get(0);
		private final RuleCall cPrimaryObligationTypesPrimaryObligationTypeParserRuleCall_12_0_0 = (RuleCall)cPrimaryObligationTypesAssignment_12_0.eContents().get(0);
		private final Keyword cFullStopKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Keyword cStateAfterObligationsDischargedKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final Assignment cStateTypesAssignment_14_0 = (Assignment)cGroup_14.eContents().get(0);
		private final RuleCall cStateTypesStateTypeParserRuleCall_14_0_0 = (RuleCall)cStateTypesAssignment_14_0.eContents().get(0);
		private final Keyword cFullStopKeyword_14_1 = (Keyword)cGroup_14.eContents().get(1);
		private final Keyword cTerminationKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Assignment cTerminationTypesAssignment_16_0 = (Assignment)cGroup_16.eContents().get(0);
		private final RuleCall cTerminationTypesTerminationTypeParserRuleCall_16_0_0 = (RuleCall)cTerminationTypesAssignment_16_0.eContents().get(0);
		private final Keyword cFullStopKeyword_16_1 = (Keyword)cGroup_16.eContents().get(1);
		private final Keyword cStateAfterTerminationKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Group cGroup_18 = (Group)cGroup.eContents().get(18);
		private final Assignment cStateTypesAssignment_18_0 = (Assignment)cGroup_18.eContents().get(0);
		private final RuleCall cStateTypesStateTypeParserRuleCall_18_0_0 = (RuleCall)cStateTypesAssignment_18_0.eContents().get(0);
		private final Keyword cFullStopKeyword_18_1 = (Keyword)cGroup_18.eContents().get(1);
		private final Keyword cBoilerplateKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Group cGroup_20 = (Group)cGroup.eContents().get(20);
		private final Assignment cBoilerplateTypesAssignment_20_0 = (Assignment)cGroup_20.eContents().get(0);
		private final RuleCall cBoilerplateTypesBoilerplateTypeParserRuleCall_20_0_0 = (RuleCall)cBoilerplateTypesAssignment_20_0.eContents().get(0);
		private final Keyword cFullStopKeyword_20_1 = (Keyword)cGroup_20.eContents().get(1);
		
		//Model:
		//    'ContractTitle:' title=STRING '.'+
		//    'Entities:'
		//    (entityTypes+=EntityType '.')+
		//    'Formalities:'?
		//    (formalityTypes+=FormalityType '.')*
		//    'Actions:'?
		//    (actionTypes+=ActionType '.')*
		//    'StateOnSignature:'?
		//    (stateTypes+=StateType '.')*
		//    'PrimaryObligations:'
		//    (primaryObligationTypes+=PrimaryObligationType '.')+
		//    'StateAfterObligationsDischarged:'?
		//    (stateTypes+=StateType '.')*
		//    'Termination:'
		//    (terminationTypes+=TerminationType '.')*
		//    'StateAfterTermination:'?
		//    (stateTypes+=StateType '.')*
		//    'Boilerplate:'
		//    (boilerplateTypes+=BoilerplateType '.')*;
		@Override public ParserRule getRule() { return rule; }
		
		//'ContractTitle:' title=STRING '.'+
		//'Entities:'
		//(entityTypes+=EntityType '.')+
		//'Formalities:'?
		//(formalityTypes+=FormalityType '.')*
		//'Actions:'?
		//(actionTypes+=ActionType '.')*
		//'StateOnSignature:'?
		//(stateTypes+=StateType '.')*
		//'PrimaryObligations:'
		//(primaryObligationTypes+=PrimaryObligationType '.')+
		//'StateAfterObligationsDischarged:'?
		//(stateTypes+=StateType '.')*
		//'Termination:'
		//(terminationTypes+=TerminationType '.')*
		//'StateAfterTermination:'?
		//(stateTypes+=StateType '.')*
		//'Boilerplate:'
		//(boilerplateTypes+=BoilerplateType '.')*
		public Group getGroup() { return cGroup; }
		
		//'ContractTitle:'
		public Keyword getContractTitleKeyword_0() { return cContractTitleKeyword_0; }
		
		//title=STRING
		public Assignment getTitleAssignment_1() { return cTitleAssignment_1; }
		
		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_1_0() { return cTitleSTRINGTerminalRuleCall_1_0; }
		
		//'.'+
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//'Entities:'
		public Keyword getEntitiesKeyword_3() { return cEntitiesKeyword_3; }
		
		//(entityTypes+=EntityType '.')+
		public Group getGroup_4() { return cGroup_4; }
		
		//entityTypes+=EntityType
		public Assignment getEntityTypesAssignment_4_0() { return cEntityTypesAssignment_4_0; }
		
		//EntityType
		public RuleCall getEntityTypesEntityTypeParserRuleCall_4_0_0() { return cEntityTypesEntityTypeParserRuleCall_4_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_4_1() { return cFullStopKeyword_4_1; }
		
		//'Formalities:'?
		public Keyword getFormalitiesKeyword_5() { return cFormalitiesKeyword_5; }
		
		//(formalityTypes+=FormalityType '.')*
		public Group getGroup_6() { return cGroup_6; }
		
		//formalityTypes+=FormalityType
		public Assignment getFormalityTypesAssignment_6_0() { return cFormalityTypesAssignment_6_0; }
		
		//FormalityType
		public RuleCall getFormalityTypesFormalityTypeParserRuleCall_6_0_0() { return cFormalityTypesFormalityTypeParserRuleCall_6_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_6_1() { return cFullStopKeyword_6_1; }
		
		//'Actions:'?
		public Keyword getActionsKeyword_7() { return cActionsKeyword_7; }
		
		//(actionTypes+=ActionType '.')*
		public Group getGroup_8() { return cGroup_8; }
		
		//actionTypes+=ActionType
		public Assignment getActionTypesAssignment_8_0() { return cActionTypesAssignment_8_0; }
		
		//ActionType
		public RuleCall getActionTypesActionTypeParserRuleCall_8_0_0() { return cActionTypesActionTypeParserRuleCall_8_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_8_1() { return cFullStopKeyword_8_1; }
		
		//'StateOnSignature:'?
		public Keyword getStateOnSignatureKeyword_9() { return cStateOnSignatureKeyword_9; }
		
		//(stateTypes+=StateType '.')*
		public Group getGroup_10() { return cGroup_10; }
		
		//stateTypes+=StateType
		public Assignment getStateTypesAssignment_10_0() { return cStateTypesAssignment_10_0; }
		
		//StateType
		public RuleCall getStateTypesStateTypeParserRuleCall_10_0_0() { return cStateTypesStateTypeParserRuleCall_10_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_10_1() { return cFullStopKeyword_10_1; }
		
		//'PrimaryObligations:'
		public Keyword getPrimaryObligationsKeyword_11() { return cPrimaryObligationsKeyword_11; }
		
		//(primaryObligationTypes+=PrimaryObligationType '.')+
		public Group getGroup_12() { return cGroup_12; }
		
		//primaryObligationTypes+=PrimaryObligationType
		public Assignment getPrimaryObligationTypesAssignment_12_0() { return cPrimaryObligationTypesAssignment_12_0; }
		
		//PrimaryObligationType
		public RuleCall getPrimaryObligationTypesPrimaryObligationTypeParserRuleCall_12_0_0() { return cPrimaryObligationTypesPrimaryObligationTypeParserRuleCall_12_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_12_1() { return cFullStopKeyword_12_1; }
		
		//'StateAfterObligationsDischarged:'?
		public Keyword getStateAfterObligationsDischargedKeyword_13() { return cStateAfterObligationsDischargedKeyword_13; }
		
		//(stateTypes+=StateType '.')*
		public Group getGroup_14() { return cGroup_14; }
		
		//stateTypes+=StateType
		public Assignment getStateTypesAssignment_14_0() { return cStateTypesAssignment_14_0; }
		
		//StateType
		public RuleCall getStateTypesStateTypeParserRuleCall_14_0_0() { return cStateTypesStateTypeParserRuleCall_14_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_14_1() { return cFullStopKeyword_14_1; }
		
		//'Termination:'
		public Keyword getTerminationKeyword_15() { return cTerminationKeyword_15; }
		
		//(terminationTypes+=TerminationType '.')*
		public Group getGroup_16() { return cGroup_16; }
		
		//terminationTypes+=TerminationType
		public Assignment getTerminationTypesAssignment_16_0() { return cTerminationTypesAssignment_16_0; }
		
		//TerminationType
		public RuleCall getTerminationTypesTerminationTypeParserRuleCall_16_0_0() { return cTerminationTypesTerminationTypeParserRuleCall_16_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_16_1() { return cFullStopKeyword_16_1; }
		
		//'StateAfterTermination:'?
		public Keyword getStateAfterTerminationKeyword_17() { return cStateAfterTerminationKeyword_17; }
		
		//(stateTypes+=StateType '.')*
		public Group getGroup_18() { return cGroup_18; }
		
		//stateTypes+=StateType
		public Assignment getStateTypesAssignment_18_0() { return cStateTypesAssignment_18_0; }
		
		//StateType
		public RuleCall getStateTypesStateTypeParserRuleCall_18_0_0() { return cStateTypesStateTypeParserRuleCall_18_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_18_1() { return cFullStopKeyword_18_1; }
		
		//'Boilerplate:'
		public Keyword getBoilerplateKeyword_19() { return cBoilerplateKeyword_19; }
		
		//(boilerplateTypes+=BoilerplateType '.')*
		public Group getGroup_20() { return cGroup_20; }
		
		//boilerplateTypes+=BoilerplateType
		public Assignment getBoilerplateTypesAssignment_20_0() { return cBoilerplateTypesAssignment_20_0; }
		
		//BoilerplateType
		public RuleCall getBoilerplateTypesBoilerplateTypeParserRuleCall_20_0_0() { return cBoilerplateTypesBoilerplateTypeParserRuleCall_20_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_20_1() { return cFullStopKeyword_20_1; }
	}
	public class EntityTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.EntityType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEffectiveDateParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPartyParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cThirdPartyParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cSubjectMatterParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		////Entity Types
		//EntityType:
		//    EffectiveDate | Party | ThirdParty | SubjectMatter;
		@Override public ParserRule getRule() { return rule; }
		
		//EffectiveDate | Party | ThirdParty | SubjectMatter
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EffectiveDate
		public RuleCall getEffectiveDateParserRuleCall_0() { return cEffectiveDateParserRuleCall_0; }
		
		//Party
		public RuleCall getPartyParserRuleCall_1() { return cPartyParserRuleCall_1; }
		
		//ThirdParty
		public RuleCall getThirdPartyParserRuleCall_2() { return cThirdPartyParserRuleCall_2; }
		
		//SubjectMatter
		public RuleCall getSubjectMatterParserRuleCall_3() { return cSubjectMatterParserRuleCall_3; }
	}
	public class EffectiveDateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.EffectiveDate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEffectiveDateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cDayAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cDayINTTerminalRuleCall_1_0_0 = (RuleCall)cDayAssignment_1_0.eContents().get(0);
		private final Assignment cMonthAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cMonthINTTerminalRuleCall_1_1_0 = (RuleCall)cMonthAssignment_1_1.eContents().get(0);
		private final Assignment cYearAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cYearINTTerminalRuleCall_1_2_0 = (RuleCall)cYearAssignment_1_2.eContents().get(0);
		
		//EffectiveDate:
		//    'EffectiveDate:' (day=INT month=INT year=INT)+;
		@Override public ParserRule getRule() { return rule; }
		
		//'EffectiveDate:' (day=INT month=INT year=INT)+
		public Group getGroup() { return cGroup; }
		
		//'EffectiveDate:'
		public Keyword getEffectiveDateKeyword_0() { return cEffectiveDateKeyword_0; }
		
		//(day=INT month=INT year=INT)+
		public Group getGroup_1() { return cGroup_1; }
		
		//day=INT
		public Assignment getDayAssignment_1_0() { return cDayAssignment_1_0; }
		
		//INT
		public RuleCall getDayINTTerminalRuleCall_1_0_0() { return cDayINTTerminalRuleCall_1_0_0; }
		
		//month=INT
		public Assignment getMonthAssignment_1_1() { return cMonthAssignment_1_1; }
		
		//INT
		public RuleCall getMonthINTTerminalRuleCall_1_1_0() { return cMonthINTTerminalRuleCall_1_1_0; }
		
		//year=INT
		public Assignment getYearAssignment_1_2() { return cYearAssignment_1_2; }
		
		//INT
		public RuleCall getYearINTTerminalRuleCall_1_2_0() { return cYearINTTerminalRuleCall_1_2_0; }
	}
	public class PartyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.Party");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPartyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cFullnameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFullnameSTRINGTerminalRuleCall_2_0 = (RuleCall)cFullnameAssignment_2.eContents().get(0);
		private final Assignment cFeatureAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFeatureFeatureParserRuleCall_3_0 = (RuleCall)cFeatureAssignment_3.eContents().get(0);
		
		//Party:
		//    'Party:' name=ID fullname=STRING (feature+=Feature)*;
		@Override public ParserRule getRule() { return rule; }
		
		//'Party:' name=ID fullname=STRING (feature+=Feature)*
		public Group getGroup() { return cGroup; }
		
		//'Party:'
		public Keyword getPartyKeyword_0() { return cPartyKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//fullname=STRING
		public Assignment getFullnameAssignment_2() { return cFullnameAssignment_2; }
		
		//STRING
		public RuleCall getFullnameSTRINGTerminalRuleCall_2_0() { return cFullnameSTRINGTerminalRuleCall_2_0; }
		
		//(feature+=Feature)*
		public Assignment getFeatureAssignment_3() { return cFeatureAssignment_3; }
		
		//Feature
		public RuleCall getFeatureFeatureParserRuleCall_3_0() { return cFeatureFeatureParserRuleCall_3_0; }
	}
	public class ThirdPartyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.ThirdParty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cThirdPartyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cFullnameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFullnameSTRINGTerminalRuleCall_2_0 = (RuleCall)cFullnameAssignment_2.eContents().get(0);
		private final Assignment cFeatureAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFeatureFeatureParserRuleCall_3_0 = (RuleCall)cFeatureAssignment_3.eContents().get(0);
		
		//ThirdParty:
		//    'ThirdParty:' name=ID fullname=STRING (feature+=Feature)*;
		@Override public ParserRule getRule() { return rule; }
		
		//'ThirdParty:' name=ID fullname=STRING (feature+=Feature)*
		public Group getGroup() { return cGroup; }
		
		//'ThirdParty:'
		public Keyword getThirdPartyKeyword_0() { return cThirdPartyKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//fullname=STRING
		public Assignment getFullnameAssignment_2() { return cFullnameAssignment_2; }
		
		//STRING
		public RuleCall getFullnameSTRINGTerminalRuleCall_2_0() { return cFullnameSTRINGTerminalRuleCall_2_0; }
		
		//(feature+=Feature)*
		public Assignment getFeatureAssignment_3() { return cFeatureAssignment_3; }
		
		//Feature
		public RuleCall getFeatureFeatureParserRuleCall_3_0() { return cFeatureFeatureParserRuleCall_3_0; }
	}
	public class SubjectMatterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.SubjectMatter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSubjectMatterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cSubjectMatterAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSubjectMatterSTRINGTerminalRuleCall_2_0 = (RuleCall)cSubjectMatterAssignment_2.eContents().get(0);
		private final Assignment cFeatureAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFeatureFeatureParserRuleCall_3_0 = (RuleCall)cFeatureAssignment_3.eContents().get(0);
		
		//SubjectMatter:
		//    'SubjectMatter:' name=ID subjectMatter=STRING (feature+=Feature)*;
		@Override public ParserRule getRule() { return rule; }
		
		//'SubjectMatter:' name=ID subjectMatter=STRING (feature+=Feature)*
		public Group getGroup() { return cGroup; }
		
		//'SubjectMatter:'
		public Keyword getSubjectMatterKeyword_0() { return cSubjectMatterKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//subjectMatter=STRING
		public Assignment getSubjectMatterAssignment_2() { return cSubjectMatterAssignment_2; }
		
		//STRING
		public RuleCall getSubjectMatterSTRINGTerminalRuleCall_2_0() { return cSubjectMatterSTRINGTerminalRuleCall_2_0; }
		
		//(feature+=Feature)*
		public Assignment getFeatureAssignment_3() { return cFeatureAssignment_3; }
		
		//Feature
		public RuleCall getFeatureFeatureParserRuleCall_3_0() { return cFeatureFeatureParserRuleCall_3_0; }
	}
	public class FeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.Feature");
		private final Assignment cFeaturetypeAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cFeaturetypeFeatureTypeParserRuleCall_0 = (RuleCall)cFeaturetypeAssignment.eContents().get(0);
		
		//Feature:
		//    featuretype=FeatureType;
		@Override public ParserRule getRule() { return rule; }
		
		//featuretype=FeatureType
		public Assignment getFeaturetypeAssignment() { return cFeaturetypeAssignment; }
		
		//FeatureType
		public RuleCall getFeaturetypeFeatureTypeParserRuleCall_0() { return cFeaturetypeFeatureTypeParserRuleCall_0; }
	}
	public class FeatureTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.FeatureType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDefinedTermParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAddressParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCompanyNumberParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cCustomFeatureParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//FeatureType:
		//    DefinedTerm | Address | CompanyNumber | CustomFeature;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinedTerm | Address | CompanyNumber | CustomFeature
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DefinedTerm
		public RuleCall getDefinedTermParserRuleCall_0() { return cDefinedTermParserRuleCall_0; }
		
		//Address
		public RuleCall getAddressParserRuleCall_1() { return cAddressParserRuleCall_1; }
		
		//CompanyNumber
		public RuleCall getCompanyNumberParserRuleCall_2() { return cCompanyNumberParserRuleCall_2; }
		
		//CustomFeature
		public RuleCall getCustomFeatureParserRuleCall_3() { return cCustomFeatureParserRuleCall_3; }
	}
	public class DefinedTermElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.DefinedTerm");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDefinedAsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDefinitionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDefinitionSTRINGTerminalRuleCall_1_0 = (RuleCall)cDefinitionAssignment_1.eContents().get(0);
		
		//DefinedTerm:
		//    'definedAs' definition=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'definedAs' definition=STRING
		public Group getGroup() { return cGroup; }
		
		//'definedAs'
		public Keyword getDefinedAsKeyword_0() { return cDefinedAsKeyword_0; }
		
		//definition=STRING
		public Assignment getDefinitionAssignment_1() { return cDefinitionAssignment_1; }
		
		//STRING
		public RuleCall getDefinitionSTRINGTerminalRuleCall_1_0() { return cDefinitionSTRINGTerminalRuleCall_1_0; }
	}
	public class AddressElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.Address");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWithAddressKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDefinitionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDefinitionSTRINGTerminalRuleCall_1_0 = (RuleCall)cDefinitionAssignment_1.eContents().get(0);
		
		//Address:
		//    'withAddress' definition=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'withAddress' definition=STRING
		public Group getGroup() { return cGroup; }
		
		//'withAddress'
		public Keyword getWithAddressKeyword_0() { return cWithAddressKeyword_0; }
		
		//definition=STRING
		public Assignment getDefinitionAssignment_1() { return cDefinitionAssignment_1; }
		
		//STRING
		public RuleCall getDefinitionSTRINGTerminalRuleCall_1_0() { return cDefinitionSTRINGTerminalRuleCall_1_0; }
	}
	public class CompanyNumberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.CompanyNumber");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWithCompanyNumberKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDefinitionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDefinitionSTRINGTerminalRuleCall_1_0 = (RuleCall)cDefinitionAssignment_1.eContents().get(0);
		
		//CompanyNumber:
		//    'withCompanyNumber' definition=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'withCompanyNumber' definition=STRING
		public Group getGroup() { return cGroup; }
		
		//'withCompanyNumber'
		public Keyword getWithCompanyNumberKeyword_0() { return cWithCompanyNumberKeyword_0; }
		
		//definition=STRING
		public Assignment getDefinitionAssignment_1() { return cDefinitionAssignment_1; }
		
		//STRING
		public RuleCall getDefinitionSTRINGTerminalRuleCall_1_0() { return cDefinitionSTRINGTerminalRuleCall_1_0; }
	}
	public class CustomFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.CustomFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWithFeatureKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFeatureAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFeatureSTRINGTerminalRuleCall_1_0 = (RuleCall)cFeatureAssignment_1.eContents().get(0);
		
		//CustomFeature:
		//    'withFeature' feature=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'withFeature' feature=STRING
		public Group getGroup() { return cGroup; }
		
		//'withFeature'
		public Keyword getWithFeatureKeyword_0() { return cWithFeatureKeyword_0; }
		
		//feature=STRING
		public Assignment getFeatureAssignment_1() { return cFeatureAssignment_1; }
		
		//STRING
		public RuleCall getFeatureSTRINGTerminalRuleCall_1_0() { return cFeatureSTRINGTerminalRuleCall_1_0; }
	}
	public class FormalityTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.FormalityType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cInWritingParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cByEmailParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cGivingNoticeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cCustomFormalityParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		////Formality Types
		//FormalityType:
		//    InWriting | ByEmail | GivingNotice | CustomFormality;
		@Override public ParserRule getRule() { return rule; }
		
		//InWriting | ByEmail | GivingNotice | CustomFormality
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//InWriting
		public RuleCall getInWritingParserRuleCall_0() { return cInWritingParserRuleCall_0; }
		
		//ByEmail
		public RuleCall getByEmailParserRuleCall_1() { return cByEmailParserRuleCall_1; }
		
		//GivingNotice
		public RuleCall getGivingNoticeParserRuleCall_2() { return cGivingNoticeParserRuleCall_2; }
		
		//CustomFormality
		public RuleCall getCustomFormalityParserRuleCall_3() { return cCustomFormalityParserRuleCall_3; }
	}
	public class InWritingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.InWriting");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInWritingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cCustomWritingFormalityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCustomWritingFormalitySTRINGTerminalRuleCall_1_0 = (RuleCall)cCustomWritingFormalityAssignment_1.eContents().get(0);
		
		//InWriting:
		//    'inWriting' customWritingFormality=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'inWriting' customWritingFormality=STRING
		public Group getGroup() { return cGroup; }
		
		//'inWriting'
		public Keyword getInWritingKeyword_0() { return cInWritingKeyword_0; }
		
		//customWritingFormality=STRING
		public Assignment getCustomWritingFormalityAssignment_1() { return cCustomWritingFormalityAssignment_1; }
		
		//STRING
		public RuleCall getCustomWritingFormalitySTRINGTerminalRuleCall_1_0() { return cCustomWritingFormalitySTRINGTerminalRuleCall_1_0; }
	}
	public class ByEmailElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.ByEmail");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cByEmailKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cToKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEmailAddressAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEmailAddressSTRINGTerminalRuleCall_2_0 = (RuleCall)cEmailAddressAssignment_2.eContents().get(0);
		
		//ByEmail:
		//    'byEmail' 'to' (emailAddress=STRING);
		@Override public ParserRule getRule() { return rule; }
		
		//'byEmail' 'to' (emailAddress=STRING)
		public Group getGroup() { return cGroup; }
		
		//'byEmail'
		public Keyword getByEmailKeyword_0() { return cByEmailKeyword_0; }
		
		//'to'
		public Keyword getToKeyword_1() { return cToKeyword_1; }
		
		//(emailAddress=STRING)
		public Assignment getEmailAddressAssignment_2() { return cEmailAddressAssignment_2; }
		
		//STRING
		public RuleCall getEmailAddressSTRINGTerminalRuleCall_2_0() { return cEmailAddressSTRINGTerminalRuleCall_2_0; }
	}
	public class GivingNoticeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.GivingNotice");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGivingNoticeToKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSuperTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSuperTypePartyCrossReference_1_0 = (CrossReference)cSuperTypeAssignment_1.eContents().get(0);
		private final RuleCall cSuperTypePartyIDTerminalRuleCall_1_0_1 = (RuleCall)cSuperTypePartyCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cWithDurationKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cNumDaysAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cNumDaysINTTerminalRuleCall_2_1_0 = (RuleCall)cNumDaysAssignment_2_1.eContents().get(0);
		private final Keyword cDaysKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		
		//GivingNotice:
		//    'givingNoticeTo' superType=[Party] ('withDuration' numDays=INT 'days');
		@Override public ParserRule getRule() { return rule; }
		
		//'givingNoticeTo' superType=[Party] ('withDuration' numDays=INT 'days')
		public Group getGroup() { return cGroup; }
		
		//'givingNoticeTo'
		public Keyword getGivingNoticeToKeyword_0() { return cGivingNoticeToKeyword_0; }
		
		//superType=[Party]
		public Assignment getSuperTypeAssignment_1() { return cSuperTypeAssignment_1; }
		
		//[Party]
		public CrossReference getSuperTypePartyCrossReference_1_0() { return cSuperTypePartyCrossReference_1_0; }
		
		//ID
		public RuleCall getSuperTypePartyIDTerminalRuleCall_1_0_1() { return cSuperTypePartyIDTerminalRuleCall_1_0_1; }
		
		//('withDuration' numDays=INT 'days')
		public Group getGroup_2() { return cGroup_2; }
		
		//'withDuration'
		public Keyword getWithDurationKeyword_2_0() { return cWithDurationKeyword_2_0; }
		
		//numDays=INT
		public Assignment getNumDaysAssignment_2_1() { return cNumDaysAssignment_2_1; }
		
		//INT
		public RuleCall getNumDaysINTTerminalRuleCall_2_1_0() { return cNumDaysINTTerminalRuleCall_2_1_0; }
		
		//'days'
		public Keyword getDaysKeyword_2_2() { return cDaysKeyword_2_2; }
	}
	public class CustomFormalityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.CustomFormality");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContractFormalityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cCustomFormalityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCustomFormalitySTRINGTerminalRuleCall_1_0 = (RuleCall)cCustomFormalityAssignment_1.eContents().get(0);
		
		//CustomFormality:
		//    'ContractFormality' customFormality=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'ContractFormality' customFormality=STRING
		public Group getGroup() { return cGroup; }
		
		//'ContractFormality'
		public Keyword getContractFormalityKeyword_0() { return cContractFormalityKeyword_0; }
		
		//customFormality=STRING
		public Assignment getCustomFormalityAssignment_1() { return cCustomFormalityAssignment_1; }
		
		//STRING
		public RuleCall getCustomFormalitySTRINGTerminalRuleCall_1_0() { return cCustomFormalitySTRINGTerminalRuleCall_1_0; }
	}
	public class ActionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.ActionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGivenConsentParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGivenWrittenConsentParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		////Actions
		//ActionType:
		//    GivenConsent | GivenWrittenConsent;
		@Override public ParserRule getRule() { return rule; }
		
		//GivenConsent | GivenWrittenConsent
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GivenConsent
		public RuleCall getGivenConsentParserRuleCall_0() { return cGivenConsentParserRuleCall_0; }
		
		//GivenWrittenConsent
		public RuleCall getGivenWrittenConsentParserRuleCall_1() { return cGivenWrittenConsentParserRuleCall_1; }
	}
	public class GivenConsentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.GivenConsent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSuperTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cSuperTypePartyCrossReference_0_0 = (CrossReference)cSuperTypeAssignment_0.eContents().get(0);
		private final RuleCall cSuperTypePartyIDTerminalRuleCall_0_0_1 = (RuleCall)cSuperTypePartyCrossReference_0_0.eContents().get(1);
		private final Keyword cGaveConsentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//GivenConsent:
		//    superType=[Party] 'gaveConsent';
		@Override public ParserRule getRule() { return rule; }
		
		//superType=[Party] 'gaveConsent'
		public Group getGroup() { return cGroup; }
		
		//superType=[Party]
		public Assignment getSuperTypeAssignment_0() { return cSuperTypeAssignment_0; }
		
		//[Party]
		public CrossReference getSuperTypePartyCrossReference_0_0() { return cSuperTypePartyCrossReference_0_0; }
		
		//ID
		public RuleCall getSuperTypePartyIDTerminalRuleCall_0_0_1() { return cSuperTypePartyIDTerminalRuleCall_0_0_1; }
		
		//'gaveConsent'
		public Keyword getGaveConsentKeyword_1() { return cGaveConsentKeyword_1; }
	}
	public class GivenWrittenConsentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.GivenWrittenConsent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSuperTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cSuperTypePartyCrossReference_0_0 = (CrossReference)cSuperTypeAssignment_0.eContents().get(0);
		private final RuleCall cSuperTypePartyIDTerminalRuleCall_0_0_1 = (RuleCall)cSuperTypePartyCrossReference_0_0.eContents().get(1);
		private final Keyword cGaveWrittenConsentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//GivenWrittenConsent:
		//    superType=[Party] 'gaveWrittenConsent';
		@Override public ParserRule getRule() { return rule; }
		
		//superType=[Party] 'gaveWrittenConsent'
		public Group getGroup() { return cGroup; }
		
		//superType=[Party]
		public Assignment getSuperTypeAssignment_0() { return cSuperTypeAssignment_0; }
		
		//[Party]
		public CrossReference getSuperTypePartyCrossReference_0_0() { return cSuperTypePartyCrossReference_0_0; }
		
		//ID
		public RuleCall getSuperTypePartyIDTerminalRuleCall_0_0_1() { return cSuperTypePartyIDTerminalRuleCall_0_0_1; }
		
		//'gaveWrittenConsent'
		public Keyword getGaveWrittenConsentKeyword_1() { return cGaveWrittenConsentKeyword_1; }
	}
	public class StateTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.StateType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cOwnershipParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRightToUseParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		////State on Signature
		//StateType:
		//    Ownership | RightToUse;
		@Override public ParserRule getRule() { return rule; }
		
		//Ownership | RightToUse
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Ownership
		public RuleCall getOwnershipParserRuleCall_0() { return cOwnershipParserRuleCall_0; }
		
		//RightToUse
		public RuleCall getRightToUseParserRuleCall_1() { return cRightToUseParserRuleCall_1; }
	}
	public class OwnershipElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.Ownership");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSuperTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cSuperTypePartyCrossReference_0_0 = (CrossReference)cSuperTypeAssignment_0.eContents().get(0);
		private final RuleCall cSuperTypePartyIDTerminalRuleCall_0_0_1 = (RuleCall)cSuperTypePartyCrossReference_0_0.eContents().get(1);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cOwnsKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Keyword cWillReturnKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final Assignment cCustomOwnershipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCustomOwnershipSTRINGTerminalRuleCall_2_0 = (RuleCall)cCustomOwnershipAssignment_2.eContents().get(0);
		private final Assignment cSuperTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cSuperTypeSubjectMatterCrossReference_3_0 = (CrossReference)cSuperTypeAssignment_3.eContents().get(0);
		private final RuleCall cSuperTypeSubjectMatterIDTerminalRuleCall_3_0_1 = (RuleCall)cSuperTypeSubjectMatterCrossReference_3_0.eContents().get(1);
		
		//Ownership:
		//    superType=[Party] ('owns' | 'willReturn') (customOwnership=STRING)* superType=[SubjectMatter];
		@Override public ParserRule getRule() { return rule; }
		
		//superType=[Party] ('owns' | 'willReturn') (customOwnership=STRING)* superType=[SubjectMatter]
		public Group getGroup() { return cGroup; }
		
		//superType=[Party]
		public Assignment getSuperTypeAssignment_0() { return cSuperTypeAssignment_0; }
		
		//[Party]
		public CrossReference getSuperTypePartyCrossReference_0_0() { return cSuperTypePartyCrossReference_0_0; }
		
		//ID
		public RuleCall getSuperTypePartyIDTerminalRuleCall_0_0_1() { return cSuperTypePartyIDTerminalRuleCall_0_0_1; }
		
		//('owns' | 'willReturn')
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'owns'
		public Keyword getOwnsKeyword_1_0() { return cOwnsKeyword_1_0; }
		
		//'willReturn'
		public Keyword getWillReturnKeyword_1_1() { return cWillReturnKeyword_1_1; }
		
		//(customOwnership=STRING)*
		public Assignment getCustomOwnershipAssignment_2() { return cCustomOwnershipAssignment_2; }
		
		//STRING
		public RuleCall getCustomOwnershipSTRINGTerminalRuleCall_2_0() { return cCustomOwnershipSTRINGTerminalRuleCall_2_0; }
		
		//superType=[SubjectMatter]
		public Assignment getSuperTypeAssignment_3() { return cSuperTypeAssignment_3; }
		
		//[SubjectMatter]
		public CrossReference getSuperTypeSubjectMatterCrossReference_3_0() { return cSuperTypeSubjectMatterCrossReference_3_0; }
		
		//ID
		public RuleCall getSuperTypeSubjectMatterIDTerminalRuleCall_3_0_1() { return cSuperTypeSubjectMatterIDTerminalRuleCall_3_0_1; }
	}
	public class RightToUseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.RightToUse");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSuperTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cSuperTypePartyCrossReference_0_0 = (CrossReference)cSuperTypeAssignment_0.eContents().get(0);
		private final RuleCall cSuperTypePartyIDTerminalRuleCall_0_0_1 = (RuleCall)cSuperTypePartyCrossReference_0_0.eContents().get(1);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cMayUseKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Keyword cMayNotUseKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final Assignment cCustomUsageAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCustomUsageSTRINGTerminalRuleCall_2_0 = (RuleCall)cCustomUsageAssignment_2.eContents().get(0);
		private final Assignment cSuperTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cSuperTypeSubjectMatterCrossReference_3_0 = (CrossReference)cSuperTypeAssignment_3.eContents().get(0);
		private final RuleCall cSuperTypeSubjectMatterIDTerminalRuleCall_3_0_1 = (RuleCall)cSuperTypeSubjectMatterCrossReference_3_0.eContents().get(1);
		
		//RightToUse:
		//    superType=[Party] ('mayUse' | 'mayNotUse') (customUsage=STRING)* superType=[SubjectMatter];
		@Override public ParserRule getRule() { return rule; }
		
		//superType=[Party] ('mayUse' | 'mayNotUse') (customUsage=STRING)* superType=[SubjectMatter]
		public Group getGroup() { return cGroup; }
		
		//superType=[Party]
		public Assignment getSuperTypeAssignment_0() { return cSuperTypeAssignment_0; }
		
		//[Party]
		public CrossReference getSuperTypePartyCrossReference_0_0() { return cSuperTypePartyCrossReference_0_0; }
		
		//ID
		public RuleCall getSuperTypePartyIDTerminalRuleCall_0_0_1() { return cSuperTypePartyIDTerminalRuleCall_0_0_1; }
		
		//('mayUse' | 'mayNotUse')
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'mayUse'
		public Keyword getMayUseKeyword_1_0() { return cMayUseKeyword_1_0; }
		
		//'mayNotUse'
		public Keyword getMayNotUseKeyword_1_1() { return cMayNotUseKeyword_1_1; }
		
		//(customUsage=STRING)*
		public Assignment getCustomUsageAssignment_2() { return cCustomUsageAssignment_2; }
		
		//STRING
		public RuleCall getCustomUsageSTRINGTerminalRuleCall_2_0() { return cCustomUsageSTRINGTerminalRuleCall_2_0; }
		
		//superType=[SubjectMatter]
		public Assignment getSuperTypeAssignment_3() { return cSuperTypeAssignment_3; }
		
		//[SubjectMatter]
		public CrossReference getSuperTypeSubjectMatterCrossReference_3_0() { return cSuperTypeSubjectMatterCrossReference_3_0; }
		
		//ID
		public RuleCall getSuperTypeSubjectMatterIDTerminalRuleCall_3_0_1() { return cSuperTypeSubjectMatterIDTerminalRuleCall_3_0_1; }
	}
	public class PrimaryObligationTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.PrimaryObligationType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPaymentObligationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDeliveryObligationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTransferObligationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cLicenceObligationParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cConstraintPartyParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cConstraintThirdPartyParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final Assignment cCustomObligationAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final RuleCall cCustomObligationSTRINGTerminalRuleCall_6_0 = (RuleCall)cCustomObligationAssignment_6.eContents().get(0);
		
		////PrimaryObligations
		//PrimaryObligationType:
		//    PaymentObligation | DeliveryObligation | TransferObligation | LicenceObligation | ConstraintParty | ConstraintThirdParty | CustomObligation=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//PaymentObligation | DeliveryObligation | TransferObligation | LicenceObligation | ConstraintParty | ConstraintThirdParty | CustomObligation=STRING
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PaymentObligation
		public RuleCall getPaymentObligationParserRuleCall_0() { return cPaymentObligationParserRuleCall_0; }
		
		//DeliveryObligation
		public RuleCall getDeliveryObligationParserRuleCall_1() { return cDeliveryObligationParserRuleCall_1; }
		
		//TransferObligation
		public RuleCall getTransferObligationParserRuleCall_2() { return cTransferObligationParserRuleCall_2; }
		
		//LicenceObligation
		public RuleCall getLicenceObligationParserRuleCall_3() { return cLicenceObligationParserRuleCall_3; }
		
		//ConstraintParty
		public RuleCall getConstraintPartyParserRuleCall_4() { return cConstraintPartyParserRuleCall_4; }
		
		//ConstraintThirdParty
		public RuleCall getConstraintThirdPartyParserRuleCall_5() { return cConstraintThirdPartyParserRuleCall_5; }
		
		//CustomObligation=STRING
		public Assignment getCustomObligationAssignment_6() { return cCustomObligationAssignment_6; }
		
		//STRING
		public RuleCall getCustomObligationSTRINGTerminalRuleCall_6_0() { return cCustomObligationSTRINGTerminalRuleCall_6_0; }
	}
	public class PaymentObligationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.PaymentObligation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPaymentObligationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSuperTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSuperTypePartyCrossReference_1_0 = (CrossReference)cSuperTypeAssignment_1.eContents().get(0);
		private final RuleCall cSuperTypePartyIDTerminalRuleCall_1_0_1 = (RuleCall)cSuperTypePartyCrossReference_1_0.eContents().get(1);
		private final Keyword cMustKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cPayKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSumAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSumINTTerminalRuleCall_4_0 = (RuleCall)cSumAssignment_4.eContents().get(0);
		private final Keyword cToKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSuperTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cSuperTypePartyCrossReference_6_0 = (CrossReference)cSuperTypeAssignment_6.eContents().get(0);
		private final RuleCall cSuperTypePartyIDTerminalRuleCall_6_0_1 = (RuleCall)cSuperTypePartyCrossReference_6_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cByKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cDateKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cDayAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cDayINTTerminalRuleCall_7_2_0 = (RuleCall)cDayAssignment_7_2.eContents().get(0);
		private final Assignment cMonthAssignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final RuleCall cMonthINTTerminalRuleCall_7_3_0 = (RuleCall)cMonthAssignment_7_3.eContents().get(0);
		private final Assignment cYearAssignment_7_4 = (Assignment)cGroup_7.eContents().get(4);
		private final RuleCall cYearINTTerminalRuleCall_7_4_0 = (RuleCall)cYearAssignment_7_4.eContents().get(0);
		
		//PaymentObligation:
		//    'PaymentObligation:' superType=[Party] 'must' 'pay' (sum=INT)+ 'to' (superType=[Party])+ ( 'by' 'date' day=INT month=INT year=INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'PaymentObligation:' superType=[Party] 'must' 'pay' (sum=INT)+ 'to' (superType=[Party])+ ( 'by' 'date' day=INT month=INT year=INT)?
		public Group getGroup() { return cGroup; }
		
		//'PaymentObligation:'
		public Keyword getPaymentObligationKeyword_0() { return cPaymentObligationKeyword_0; }
		
		//superType=[Party]
		public Assignment getSuperTypeAssignment_1() { return cSuperTypeAssignment_1; }
		
		//[Party]
		public CrossReference getSuperTypePartyCrossReference_1_0() { return cSuperTypePartyCrossReference_1_0; }
		
		//ID
		public RuleCall getSuperTypePartyIDTerminalRuleCall_1_0_1() { return cSuperTypePartyIDTerminalRuleCall_1_0_1; }
		
		//'must'
		public Keyword getMustKeyword_2() { return cMustKeyword_2; }
		
		//'pay'
		public Keyword getPayKeyword_3() { return cPayKeyword_3; }
		
		//(sum=INT)+
		public Assignment getSumAssignment_4() { return cSumAssignment_4; }
		
		//INT
		public RuleCall getSumINTTerminalRuleCall_4_0() { return cSumINTTerminalRuleCall_4_0; }
		
		//'to'
		public Keyword getToKeyword_5() { return cToKeyword_5; }
		
		//(superType=[Party])+
		public Assignment getSuperTypeAssignment_6() { return cSuperTypeAssignment_6; }
		
		//[Party]
		public CrossReference getSuperTypePartyCrossReference_6_0() { return cSuperTypePartyCrossReference_6_0; }
		
		//ID
		public RuleCall getSuperTypePartyIDTerminalRuleCall_6_0_1() { return cSuperTypePartyIDTerminalRuleCall_6_0_1; }
		
		//( 'by' 'date' day=INT month=INT year=INT)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'by'
		public Keyword getByKeyword_7_0() { return cByKeyword_7_0; }
		
		//'date'
		public Keyword getDateKeyword_7_1() { return cDateKeyword_7_1; }
		
		//day=INT
		public Assignment getDayAssignment_7_2() { return cDayAssignment_7_2; }
		
		//INT
		public RuleCall getDayINTTerminalRuleCall_7_2_0() { return cDayINTTerminalRuleCall_7_2_0; }
		
		//month=INT
		public Assignment getMonthAssignment_7_3() { return cMonthAssignment_7_3; }
		
		//INT
		public RuleCall getMonthINTTerminalRuleCall_7_3_0() { return cMonthINTTerminalRuleCall_7_3_0; }
		
		//year=INT
		public Assignment getYearAssignment_7_4() { return cYearAssignment_7_4; }
		
		//INT
		public RuleCall getYearINTTerminalRuleCall_7_4_0() { return cYearINTTerminalRuleCall_7_4_0; }
	}
	public class DeliveryObligationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.DeliveryObligation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDeliveryObligationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSuperTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSuperTypePartyCrossReference_1_0 = (CrossReference)cSuperTypeAssignment_1.eContents().get(0);
		private final RuleCall cSuperTypePartyIDTerminalRuleCall_1_0_1 = (RuleCall)cSuperTypePartyCrossReference_1_0.eContents().get(1);
		private final Keyword cMustKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cDeliverKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSuperTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cSuperTypeSubjectMatterCrossReference_4_0 = (CrossReference)cSuperTypeAssignment_4.eContents().get(0);
		private final RuleCall cSuperTypeSubjectMatterIDTerminalRuleCall_4_0_1 = (RuleCall)cSuperTypeSubjectMatterCrossReference_4_0.eContents().get(1);
		private final Keyword cToKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSuperTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cSuperTypePartyCrossReference_6_0 = (CrossReference)cSuperTypeAssignment_6.eContents().get(0);
		private final RuleCall cSuperTypePartyIDTerminalRuleCall_6_0_1 = (RuleCall)cSuperTypePartyCrossReference_6_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cByKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cDateKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cDayAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cDayINTTerminalRuleCall_7_2_0 = (RuleCall)cDayAssignment_7_2.eContents().get(0);
		private final Assignment cMonthAssignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final RuleCall cMonthINTTerminalRuleCall_7_3_0 = (RuleCall)cMonthAssignment_7_3.eContents().get(0);
		private final Assignment cYearAssignment_7_4 = (Assignment)cGroup_7.eContents().get(4);
		private final RuleCall cYearINTTerminalRuleCall_7_4_0 = (RuleCall)cYearAssignment_7_4.eContents().get(0);
		
		//DeliveryObligation:
		//    'DeliveryObligation:' superType=[Party] 'must' 'deliver' superType=[SubjectMatter]+ 'to' superType=[Party]+ ( 'by' 'date' day=INT month=INT year=INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'DeliveryObligation:' superType=[Party] 'must' 'deliver' superType=[SubjectMatter]+ 'to' superType=[Party]+ ( 'by' 'date' day=INT month=INT year=INT)?
		public Group getGroup() { return cGroup; }
		
		//'DeliveryObligation:'
		public Keyword getDeliveryObligationKeyword_0() { return cDeliveryObligationKeyword_0; }
		
		//superType=[Party]
		public Assignment getSuperTypeAssignment_1() { return cSuperTypeAssignment_1; }
		
		//[Party]
		public CrossReference getSuperTypePartyCrossReference_1_0() { return cSuperTypePartyCrossReference_1_0; }
		
		//ID
		public RuleCall getSuperTypePartyIDTerminalRuleCall_1_0_1() { return cSuperTypePartyIDTerminalRuleCall_1_0_1; }
		
		//'must'
		public Keyword getMustKeyword_2() { return cMustKeyword_2; }
		
		//'deliver'
		public Keyword getDeliverKeyword_3() { return cDeliverKeyword_3; }
		
		//superType=[SubjectMatter]+
		public Assignment getSuperTypeAssignment_4() { return cSuperTypeAssignment_4; }
		
		//[SubjectMatter]
		public CrossReference getSuperTypeSubjectMatterCrossReference_4_0() { return cSuperTypeSubjectMatterCrossReference_4_0; }
		
		//ID
		public RuleCall getSuperTypeSubjectMatterIDTerminalRuleCall_4_0_1() { return cSuperTypeSubjectMatterIDTerminalRuleCall_4_0_1; }
		
		//'to'
		public Keyword getToKeyword_5() { return cToKeyword_5; }
		
		//superType=[Party]+
		public Assignment getSuperTypeAssignment_6() { return cSuperTypeAssignment_6; }
		
		//[Party]
		public CrossReference getSuperTypePartyCrossReference_6_0() { return cSuperTypePartyCrossReference_6_0; }
		
		//ID
		public RuleCall getSuperTypePartyIDTerminalRuleCall_6_0_1() { return cSuperTypePartyIDTerminalRuleCall_6_0_1; }
		
		//( 'by' 'date' day=INT month=INT year=INT)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'by'
		public Keyword getByKeyword_7_0() { return cByKeyword_7_0; }
		
		//'date'
		public Keyword getDateKeyword_7_1() { return cDateKeyword_7_1; }
		
		//day=INT
		public Assignment getDayAssignment_7_2() { return cDayAssignment_7_2; }
		
		//INT
		public RuleCall getDayINTTerminalRuleCall_7_2_0() { return cDayINTTerminalRuleCall_7_2_0; }
		
		//month=INT
		public Assignment getMonthAssignment_7_3() { return cMonthAssignment_7_3; }
		
		//INT
		public RuleCall getMonthINTTerminalRuleCall_7_3_0() { return cMonthINTTerminalRuleCall_7_3_0; }
		
		//year=INT
		public Assignment getYearAssignment_7_4() { return cYearAssignment_7_4; }
		
		//INT
		public RuleCall getYearINTTerminalRuleCall_7_4_0() { return cYearINTTerminalRuleCall_7_4_0; }
	}
	public class TransferObligationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.TransferObligation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransferObligationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSuperTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSuperTypePartyCrossReference_1_0 = (CrossReference)cSuperTypeAssignment_1.eContents().get(0);
		private final RuleCall cSuperTypePartyIDTerminalRuleCall_1_0_1 = (RuleCall)cSuperTypePartyCrossReference_1_0.eContents().get(1);
		private final Keyword cMustKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTransferKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSuperTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cSuperTypeSubjectMatterCrossReference_4_0 = (CrossReference)cSuperTypeAssignment_4.eContents().get(0);
		private final RuleCall cSuperTypeSubjectMatterIDTerminalRuleCall_4_0_1 = (RuleCall)cSuperTypeSubjectMatterCrossReference_4_0.eContents().get(1);
		private final Keyword cToKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSuperTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cSuperTypePartyCrossReference_6_0 = (CrossReference)cSuperTypeAssignment_6.eContents().get(0);
		private final RuleCall cSuperTypePartyIDTerminalRuleCall_6_0_1 = (RuleCall)cSuperTypePartyCrossReference_6_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cByKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cDateKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cDayAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cDayINTTerminalRuleCall_7_2_0 = (RuleCall)cDayAssignment_7_2.eContents().get(0);
		private final Assignment cMonthAssignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final RuleCall cMonthINTTerminalRuleCall_7_3_0 = (RuleCall)cMonthAssignment_7_3.eContents().get(0);
		private final Assignment cYearAssignment_7_4 = (Assignment)cGroup_7.eContents().get(4);
		private final RuleCall cYearINTTerminalRuleCall_7_4_0 = (RuleCall)cYearAssignment_7_4.eContents().get(0);
		
		//TransferObligation:
		//    'TransferObligation:' superType=[Party] 'must' 'transfer' superType=[SubjectMatter]+ 'to' superType=[Party]+ ( 'by' 'date' day=INT month=INT year=INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'TransferObligation:' superType=[Party] 'must' 'transfer' superType=[SubjectMatter]+ 'to' superType=[Party]+ ( 'by' 'date' day=INT month=INT year=INT)?
		public Group getGroup() { return cGroup; }
		
		//'TransferObligation:'
		public Keyword getTransferObligationKeyword_0() { return cTransferObligationKeyword_0; }
		
		//superType=[Party]
		public Assignment getSuperTypeAssignment_1() { return cSuperTypeAssignment_1; }
		
		//[Party]
		public CrossReference getSuperTypePartyCrossReference_1_0() { return cSuperTypePartyCrossReference_1_0; }
		
		//ID
		public RuleCall getSuperTypePartyIDTerminalRuleCall_1_0_1() { return cSuperTypePartyIDTerminalRuleCall_1_0_1; }
		
		//'must'
		public Keyword getMustKeyword_2() { return cMustKeyword_2; }
		
		//'transfer'
		public Keyword getTransferKeyword_3() { return cTransferKeyword_3; }
		
		//superType=[SubjectMatter]+
		public Assignment getSuperTypeAssignment_4() { return cSuperTypeAssignment_4; }
		
		//[SubjectMatter]
		public CrossReference getSuperTypeSubjectMatterCrossReference_4_0() { return cSuperTypeSubjectMatterCrossReference_4_0; }
		
		//ID
		public RuleCall getSuperTypeSubjectMatterIDTerminalRuleCall_4_0_1() { return cSuperTypeSubjectMatterIDTerminalRuleCall_4_0_1; }
		
		//'to'
		public Keyword getToKeyword_5() { return cToKeyword_5; }
		
		//superType=[Party]+
		public Assignment getSuperTypeAssignment_6() { return cSuperTypeAssignment_6; }
		
		//[Party]
		public CrossReference getSuperTypePartyCrossReference_6_0() { return cSuperTypePartyCrossReference_6_0; }
		
		//ID
		public RuleCall getSuperTypePartyIDTerminalRuleCall_6_0_1() { return cSuperTypePartyIDTerminalRuleCall_6_0_1; }
		
		//( 'by' 'date' day=INT month=INT year=INT)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'by'
		public Keyword getByKeyword_7_0() { return cByKeyword_7_0; }
		
		//'date'
		public Keyword getDateKeyword_7_1() { return cDateKeyword_7_1; }
		
		//day=INT
		public Assignment getDayAssignment_7_2() { return cDayAssignment_7_2; }
		
		//INT
		public RuleCall getDayINTTerminalRuleCall_7_2_0() { return cDayINTTerminalRuleCall_7_2_0; }
		
		//month=INT
		public Assignment getMonthAssignment_7_3() { return cMonthAssignment_7_3; }
		
		//INT
		public RuleCall getMonthINTTerminalRuleCall_7_3_0() { return cMonthINTTerminalRuleCall_7_3_0; }
		
		//year=INT
		public Assignment getYearAssignment_7_4() { return cYearAssignment_7_4; }
		
		//INT
		public RuleCall getYearINTTerminalRuleCall_7_4_0() { return cYearINTTerminalRuleCall_7_4_0; }
	}
	public class LicenceObligationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.LicenceObligation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLicenceObligationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSuperTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSuperTypePartyCrossReference_1_0 = (CrossReference)cSuperTypeAssignment_1.eContents().get(0);
		private final RuleCall cSuperTypePartyIDTerminalRuleCall_1_0_1 = (RuleCall)cSuperTypePartyCrossReference_1_0.eContents().get(1);
		private final Keyword cMustKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cGrantKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLicenceKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cInKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSuperTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cSuperTypeSubjectMatterCrossReference_6_0 = (CrossReference)cSuperTypeAssignment_6.eContents().get(0);
		private final RuleCall cSuperTypeSubjectMatterIDTerminalRuleCall_6_0_1 = (RuleCall)cSuperTypeSubjectMatterCrossReference_6_0.eContents().get(1);
		private final Keyword cToKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cSuperTypeAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cSuperTypePartyCrossReference_8_0 = (CrossReference)cSuperTypeAssignment_8.eContents().get(0);
		private final RuleCall cSuperTypePartyIDTerminalRuleCall_8_0_1 = (RuleCall)cSuperTypePartyCrossReference_8_0.eContents().get(1);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cByKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cDateKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cDayAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cDayINTTerminalRuleCall_9_2_0 = (RuleCall)cDayAssignment_9_2.eContents().get(0);
		private final Assignment cMonthAssignment_9_3 = (Assignment)cGroup_9.eContents().get(3);
		private final RuleCall cMonthINTTerminalRuleCall_9_3_0 = (RuleCall)cMonthAssignment_9_3.eContents().get(0);
		private final Assignment cYearAssignment_9_4 = (Assignment)cGroup_9.eContents().get(4);
		private final RuleCall cYearINTTerminalRuleCall_9_4_0 = (RuleCall)cYearAssignment_9_4.eContents().get(0);
		
		//LicenceObligation:
		//    'LicenceObligation:' superType=[Party] 'must' 'grant' 'Licence' 'in' superType=[SubjectMatter]+ 'to' superType=[Party]+ ( 'by' 'date' day=INT month=INT year=INT)*;
		@Override public ParserRule getRule() { return rule; }
		
		//'LicenceObligation:' superType=[Party] 'must' 'grant' 'Licence' 'in' superType=[SubjectMatter]+ 'to' superType=[Party]+ ( 'by' 'date' day=INT month=INT year=INT)*
		public Group getGroup() { return cGroup; }
		
		//'LicenceObligation:'
		public Keyword getLicenceObligationKeyword_0() { return cLicenceObligationKeyword_0; }
		
		//superType=[Party]
		public Assignment getSuperTypeAssignment_1() { return cSuperTypeAssignment_1; }
		
		//[Party]
		public CrossReference getSuperTypePartyCrossReference_1_0() { return cSuperTypePartyCrossReference_1_0; }
		
		//ID
		public RuleCall getSuperTypePartyIDTerminalRuleCall_1_0_1() { return cSuperTypePartyIDTerminalRuleCall_1_0_1; }
		
		//'must'
		public Keyword getMustKeyword_2() { return cMustKeyword_2; }
		
		//'grant'
		public Keyword getGrantKeyword_3() { return cGrantKeyword_3; }
		
		//'Licence'
		public Keyword getLicenceKeyword_4() { return cLicenceKeyword_4; }
		
		//'in'
		public Keyword getInKeyword_5() { return cInKeyword_5; }
		
		//superType=[SubjectMatter]+
		public Assignment getSuperTypeAssignment_6() { return cSuperTypeAssignment_6; }
		
		//[SubjectMatter]
		public CrossReference getSuperTypeSubjectMatterCrossReference_6_0() { return cSuperTypeSubjectMatterCrossReference_6_0; }
		
		//ID
		public RuleCall getSuperTypeSubjectMatterIDTerminalRuleCall_6_0_1() { return cSuperTypeSubjectMatterIDTerminalRuleCall_6_0_1; }
		
		//'to'
		public Keyword getToKeyword_7() { return cToKeyword_7; }
		
		//superType=[Party]+
		public Assignment getSuperTypeAssignment_8() { return cSuperTypeAssignment_8; }
		
		//[Party]
		public CrossReference getSuperTypePartyCrossReference_8_0() { return cSuperTypePartyCrossReference_8_0; }
		
		//ID
		public RuleCall getSuperTypePartyIDTerminalRuleCall_8_0_1() { return cSuperTypePartyIDTerminalRuleCall_8_0_1; }
		
		//( 'by' 'date' day=INT month=INT year=INT)*
		public Group getGroup_9() { return cGroup_9; }
		
		//'by'
		public Keyword getByKeyword_9_0() { return cByKeyword_9_0; }
		
		//'date'
		public Keyword getDateKeyword_9_1() { return cDateKeyword_9_1; }
		
		//day=INT
		public Assignment getDayAssignment_9_2() { return cDayAssignment_9_2; }
		
		//INT
		public RuleCall getDayINTTerminalRuleCall_9_2_0() { return cDayINTTerminalRuleCall_9_2_0; }
		
		//month=INT
		public Assignment getMonthAssignment_9_3() { return cMonthAssignment_9_3; }
		
		//INT
		public RuleCall getMonthINTTerminalRuleCall_9_3_0() { return cMonthINTTerminalRuleCall_9_3_0; }
		
		//year=INT
		public Assignment getYearAssignment_9_4() { return cYearAssignment_9_4; }
		
		//INT
		public RuleCall getYearINTTerminalRuleCall_9_4_0() { return cYearINTTerminalRuleCall_9_4_0; }
	}
	public class ConstraintPartyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.ConstraintParty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConstraintPartyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSuperTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSuperTypePartyCrossReference_1_0 = (CrossReference)cSuperTypeAssignment_1.eContents().get(0);
		private final RuleCall cSuperTypePartyIDTerminalRuleCall_1_0_1 = (RuleCall)cSuperTypePartyCrossReference_1_0.eContents().get(1);
		private final Keyword cMustNotKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cForbiddenActionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cForbiddenActionSTRINGTerminalRuleCall_3_0 = (RuleCall)cForbiddenActionAssignment_3.eContents().get(0);
		private final Assignment cSuperTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cSuperTypeSubjectMatterCrossReference_4_0 = (CrossReference)cSuperTypeAssignment_4.eContents().get(0);
		private final RuleCall cSuperTypeSubjectMatterIDTerminalRuleCall_4_0_1 = (RuleCall)cSuperTypeSubjectMatterCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cToKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSuperTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cSuperTypePartyCrossReference_5_1_0 = (CrossReference)cSuperTypeAssignment_5_1.eContents().get(0);
		private final RuleCall cSuperTypePartyIDTerminalRuleCall_5_1_0_1 = (RuleCall)cSuperTypePartyCrossReference_5_1_0.eContents().get(1);
		
		//ConstraintParty:
		//    'ConstraintParty:' superType=[Party] 'mustNot' forbiddenAction=STRING superType=[SubjectMatter]? ('to' superType=[Party])?;
		@Override public ParserRule getRule() { return rule; }
		
		//'ConstraintParty:' superType=[Party] 'mustNot' forbiddenAction=STRING superType=[SubjectMatter]? ('to' superType=[Party])?
		public Group getGroup() { return cGroup; }
		
		//'ConstraintParty:'
		public Keyword getConstraintPartyKeyword_0() { return cConstraintPartyKeyword_0; }
		
		//superType=[Party]
		public Assignment getSuperTypeAssignment_1() { return cSuperTypeAssignment_1; }
		
		//[Party]
		public CrossReference getSuperTypePartyCrossReference_1_0() { return cSuperTypePartyCrossReference_1_0; }
		
		//ID
		public RuleCall getSuperTypePartyIDTerminalRuleCall_1_0_1() { return cSuperTypePartyIDTerminalRuleCall_1_0_1; }
		
		//'mustNot'
		public Keyword getMustNotKeyword_2() { return cMustNotKeyword_2; }
		
		//forbiddenAction=STRING
		public Assignment getForbiddenActionAssignment_3() { return cForbiddenActionAssignment_3; }
		
		//STRING
		public RuleCall getForbiddenActionSTRINGTerminalRuleCall_3_0() { return cForbiddenActionSTRINGTerminalRuleCall_3_0; }
		
		//superType=[SubjectMatter]?
		public Assignment getSuperTypeAssignment_4() { return cSuperTypeAssignment_4; }
		
		//[SubjectMatter]
		public CrossReference getSuperTypeSubjectMatterCrossReference_4_0() { return cSuperTypeSubjectMatterCrossReference_4_0; }
		
		//ID
		public RuleCall getSuperTypeSubjectMatterIDTerminalRuleCall_4_0_1() { return cSuperTypeSubjectMatterIDTerminalRuleCall_4_0_1; }
		
		//('to' superType=[Party])?
		public Group getGroup_5() { return cGroup_5; }
		
		//'to'
		public Keyword getToKeyword_5_0() { return cToKeyword_5_0; }
		
		//superType=[Party]
		public Assignment getSuperTypeAssignment_5_1() { return cSuperTypeAssignment_5_1; }
		
		//[Party]
		public CrossReference getSuperTypePartyCrossReference_5_1_0() { return cSuperTypePartyCrossReference_5_1_0; }
		
		//ID
		public RuleCall getSuperTypePartyIDTerminalRuleCall_5_1_0_1() { return cSuperTypePartyIDTerminalRuleCall_5_1_0_1; }
	}
	public class ConstraintThirdPartyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.ConstraintThirdParty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConstraintThirdPartyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSuperTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSuperTypePartyCrossReference_1_0 = (CrossReference)cSuperTypeAssignment_1.eContents().get(0);
		private final RuleCall cSuperTypePartyIDTerminalRuleCall_1_0_1 = (RuleCall)cSuperTypePartyCrossReference_1_0.eContents().get(1);
		private final Keyword cMustNotKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cForbiddenActionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cForbiddenActionSTRINGTerminalRuleCall_3_0 = (RuleCall)cForbiddenActionAssignment_3.eContents().get(0);
		private final Assignment cSuperTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cSuperTypeSubjectMatterCrossReference_4_0 = (CrossReference)cSuperTypeAssignment_4.eContents().get(0);
		private final RuleCall cSuperTypeSubjectMatterIDTerminalRuleCall_4_0_1 = (RuleCall)cSuperTypeSubjectMatterCrossReference_4_0.eContents().get(1);
		private final Assignment cAdditionalInfoAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAdditionalInfoSTRINGTerminalRuleCall_5_0 = (RuleCall)cAdditionalInfoAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cToKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cSuperTypeAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cSuperTypeThirdPartyCrossReference_6_1_0 = (CrossReference)cSuperTypeAssignment_6_1.eContents().get(0);
		private final RuleCall cSuperTypeThirdPartyIDTerminalRuleCall_6_1_0_1 = (RuleCall)cSuperTypeThirdPartyCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cUnlessKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cWithWrittenConsentKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Keyword cOfKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Assignment cSuperTypeAssignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final CrossReference cSuperTypePartyCrossReference_7_3_0 = (CrossReference)cSuperTypeAssignment_7_3.eContents().get(0);
		private final RuleCall cSuperTypePartyIDTerminalRuleCall_7_3_0_1 = (RuleCall)cSuperTypePartyCrossReference_7_3_0.eContents().get(1);
		
		//ConstraintThirdParty:
		//    'ConstraintThirdParty:' superType=[Party] 'mustNot' forbiddenAction=STRING superType=[SubjectMatter]? (additionalInfo=STRING)? ('to' superType=[ThirdParty])? ('unless' 'withWrittenConsent' 'of' superType=[Party])?;
		@Override public ParserRule getRule() { return rule; }
		
		//'ConstraintThirdParty:' superType=[Party] 'mustNot' forbiddenAction=STRING superType=[SubjectMatter]? (additionalInfo=STRING)? ('to' superType=[ThirdParty])? ('unless' 'withWrittenConsent' 'of' superType=[Party])?
		public Group getGroup() { return cGroup; }
		
		//'ConstraintThirdParty:'
		public Keyword getConstraintThirdPartyKeyword_0() { return cConstraintThirdPartyKeyword_0; }
		
		//superType=[Party]
		public Assignment getSuperTypeAssignment_1() { return cSuperTypeAssignment_1; }
		
		//[Party]
		public CrossReference getSuperTypePartyCrossReference_1_0() { return cSuperTypePartyCrossReference_1_0; }
		
		//ID
		public RuleCall getSuperTypePartyIDTerminalRuleCall_1_0_1() { return cSuperTypePartyIDTerminalRuleCall_1_0_1; }
		
		//'mustNot'
		public Keyword getMustNotKeyword_2() { return cMustNotKeyword_2; }
		
		//forbiddenAction=STRING
		public Assignment getForbiddenActionAssignment_3() { return cForbiddenActionAssignment_3; }
		
		//STRING
		public RuleCall getForbiddenActionSTRINGTerminalRuleCall_3_0() { return cForbiddenActionSTRINGTerminalRuleCall_3_0; }
		
		//superType=[SubjectMatter]?
		public Assignment getSuperTypeAssignment_4() { return cSuperTypeAssignment_4; }
		
		//[SubjectMatter]
		public CrossReference getSuperTypeSubjectMatterCrossReference_4_0() { return cSuperTypeSubjectMatterCrossReference_4_0; }
		
		//ID
		public RuleCall getSuperTypeSubjectMatterIDTerminalRuleCall_4_0_1() { return cSuperTypeSubjectMatterIDTerminalRuleCall_4_0_1; }
		
		//(additionalInfo=STRING)?
		public Assignment getAdditionalInfoAssignment_5() { return cAdditionalInfoAssignment_5; }
		
		//STRING
		public RuleCall getAdditionalInfoSTRINGTerminalRuleCall_5_0() { return cAdditionalInfoSTRINGTerminalRuleCall_5_0; }
		
		//('to' superType=[ThirdParty])?
		public Group getGroup_6() { return cGroup_6; }
		
		//'to'
		public Keyword getToKeyword_6_0() { return cToKeyword_6_0; }
		
		//superType=[ThirdParty]
		public Assignment getSuperTypeAssignment_6_1() { return cSuperTypeAssignment_6_1; }
		
		//[ThirdParty]
		public CrossReference getSuperTypeThirdPartyCrossReference_6_1_0() { return cSuperTypeThirdPartyCrossReference_6_1_0; }
		
		//ID
		public RuleCall getSuperTypeThirdPartyIDTerminalRuleCall_6_1_0_1() { return cSuperTypeThirdPartyIDTerminalRuleCall_6_1_0_1; }
		
		//('unless' 'withWrittenConsent' 'of' superType=[Party])?
		public Group getGroup_7() { return cGroup_7; }
		
		//'unless'
		public Keyword getUnlessKeyword_7_0() { return cUnlessKeyword_7_0; }
		
		//'withWrittenConsent'
		public Keyword getWithWrittenConsentKeyword_7_1() { return cWithWrittenConsentKeyword_7_1; }
		
		//'of'
		public Keyword getOfKeyword_7_2() { return cOfKeyword_7_2; }
		
		//superType=[Party]
		public Assignment getSuperTypeAssignment_7_3() { return cSuperTypeAssignment_7_3; }
		
		//[Party]
		public CrossReference getSuperTypePartyCrossReference_7_3_0() { return cSuperTypePartyCrossReference_7_3_0; }
		
		//ID
		public RuleCall getSuperTypePartyIDTerminalRuleCall_7_3_0_1() { return cSuperTypePartyIDTerminalRuleCall_7_3_0_1; }
	}
	public class TerminationTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.TerminationType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cForConvenienceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cOnReasonableNoticeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cForBreachParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cOnInsolvencyEventParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cCustomTerminationParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		////Termination Types
		//TerminationType:
		//    ForConvenience | OnReasonableNotice | ForBreach | OnInsolvencyEvent | CustomTermination;
		@Override public ParserRule getRule() { return rule; }
		
		//ForConvenience | OnReasonableNotice | ForBreach | OnInsolvencyEvent | CustomTermination
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ForConvenience
		public RuleCall getForConvenienceParserRuleCall_0() { return cForConvenienceParserRuleCall_0; }
		
		//OnReasonableNotice
		public RuleCall getOnReasonableNoticeParserRuleCall_1() { return cOnReasonableNoticeParserRuleCall_1; }
		
		//ForBreach
		public RuleCall getForBreachParserRuleCall_2() { return cForBreachParserRuleCall_2; }
		
		//OnInsolvencyEvent
		public RuleCall getOnInsolvencyEventParserRuleCall_3() { return cOnInsolvencyEventParserRuleCall_3; }
		
		//CustomTermination
		public RuleCall getCustomTerminationParserRuleCall_4() { return cCustomTerminationParserRuleCall_4; }
	}
	public class ForConvenienceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.ForConvenience");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTerminationForConvenienceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSuperTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSuperTypePartyCrossReference_1_0 = (CrossReference)cSuperTypeAssignment_1.eContents().get(0);
		private final RuleCall cSuperTypePartyIDTerminalRuleCall_1_0_1 = (RuleCall)cSuperTypePartyCrossReference_1_0.eContents().get(1);
		private final Keyword cMayKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTerminateKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cByKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cCustomTerminationAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCustomTerminationSTRINGTerminalRuleCall_5_0 = (RuleCall)cCustomTerminationAssignment_5.eContents().get(0);
		
		//ForConvenience:
		//    'TerminationForConvenience:' superType=[Party]+ 'may' 'terminate' 'by' customTermination=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'TerminationForConvenience:' superType=[Party]+ 'may' 'terminate' 'by' customTermination=STRING
		public Group getGroup() { return cGroup; }
		
		//'TerminationForConvenience:'
		public Keyword getTerminationForConvenienceKeyword_0() { return cTerminationForConvenienceKeyword_0; }
		
		//superType=[Party]+
		public Assignment getSuperTypeAssignment_1() { return cSuperTypeAssignment_1; }
		
		//[Party]
		public CrossReference getSuperTypePartyCrossReference_1_0() { return cSuperTypePartyCrossReference_1_0; }
		
		//ID
		public RuleCall getSuperTypePartyIDTerminalRuleCall_1_0_1() { return cSuperTypePartyIDTerminalRuleCall_1_0_1; }
		
		//'may'
		public Keyword getMayKeyword_2() { return cMayKeyword_2; }
		
		//'terminate'
		public Keyword getTerminateKeyword_3() { return cTerminateKeyword_3; }
		
		//'by'
		public Keyword getByKeyword_4() { return cByKeyword_4; }
		
		//customTermination=STRING
		public Assignment getCustomTerminationAssignment_5() { return cCustomTerminationAssignment_5; }
		
		//STRING
		public RuleCall getCustomTerminationSTRINGTerminalRuleCall_5_0() { return cCustomTerminationSTRINGTerminalRuleCall_5_0; }
	}
	public class OnReasonableNoticeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.OnReasonableNotice");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTerminationOnReasonableNoticeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSuperTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSuperTypePartyCrossReference_1_0 = (CrossReference)cSuperTypeAssignment_1.eContents().get(0);
		private final RuleCall cSuperTypePartyIDTerminalRuleCall_1_0_1 = (RuleCall)cSuperTypePartyCrossReference_1_0.eContents().get(1);
		private final Keyword cMayKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTerminateKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cByKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSuperTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cSuperTypeGivingNoticeCrossReference_5_0 = (CrossReference)cSuperTypeAssignment_5.eContents().get(0);
		private final RuleCall cSuperTypeGivingNoticeIDTerminalRuleCall_5_0_1 = (RuleCall)cSuperTypeGivingNoticeCrossReference_5_0.eContents().get(1);
		
		//OnReasonableNotice:
		//    'TerminationOnReasonableNotice:' superType=[Party]+ 'may' 'terminate' 'by' superType=[GivingNotice]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'TerminationOnReasonableNotice:' superType=[Party]+ 'may' 'terminate' 'by' superType=[GivingNotice]
		public Group getGroup() { return cGroup; }
		
		//'TerminationOnReasonableNotice:'
		public Keyword getTerminationOnReasonableNoticeKeyword_0() { return cTerminationOnReasonableNoticeKeyword_0; }
		
		//superType=[Party]+
		public Assignment getSuperTypeAssignment_1() { return cSuperTypeAssignment_1; }
		
		//[Party]
		public CrossReference getSuperTypePartyCrossReference_1_0() { return cSuperTypePartyCrossReference_1_0; }
		
		//ID
		public RuleCall getSuperTypePartyIDTerminalRuleCall_1_0_1() { return cSuperTypePartyIDTerminalRuleCall_1_0_1; }
		
		//'may'
		public Keyword getMayKeyword_2() { return cMayKeyword_2; }
		
		//'terminate'
		public Keyword getTerminateKeyword_3() { return cTerminateKeyword_3; }
		
		//'by'
		public Keyword getByKeyword_4() { return cByKeyword_4; }
		
		//superType=[GivingNotice]
		public Assignment getSuperTypeAssignment_5() { return cSuperTypeAssignment_5; }
		
		//[GivingNotice]
		public CrossReference getSuperTypeGivingNoticeCrossReference_5_0() { return cSuperTypeGivingNoticeCrossReference_5_0; }
		
		//ID
		public RuleCall getSuperTypeGivingNoticeIDTerminalRuleCall_5_0_1() { return cSuperTypeGivingNoticeIDTerminalRuleCall_5_0_1; }
	}
	public class ForBreachElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.ForBreach");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTerminationForBreachKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSuperTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSuperTypePartyCrossReference_1_0 = (CrossReference)cSuperTypeAssignment_1.eContents().get(0);
		private final RuleCall cSuperTypePartyIDTerminalRuleCall_1_0_1 = (RuleCall)cSuperTypePartyCrossReference_1_0.eContents().get(1);
		private final Keyword cMayKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTerminateKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cForBreachOfKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cObligationBreachedAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cObligationBreachedSTRINGTerminalRuleCall_5_0 = (RuleCall)cObligationBreachedAssignment_5.eContents().get(0);
		private final Keyword cByKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cSuperTypeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cSuperTypePartyCrossReference_7_0 = (CrossReference)cSuperTypeAssignment_7.eContents().get(0);
		private final RuleCall cSuperTypePartyIDTerminalRuleCall_7_0_1 = (RuleCall)cSuperTypePartyCrossReference_7_0.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cUnlessKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cRemedialSchemeAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cRemedialSchemeSTRINGTerminalRuleCall_8_1_0 = (RuleCall)cRemedialSchemeAssignment_8_1.eContents().get(0);
		
		//ForBreach:
		//    'TerminationForBreach:'    superType=[Party]+ 'may' 'terminate' 'forBreachOf' (ObligationBreached=STRING)+ 'by' superType=[Party] ('unless' RemedialScheme=STRING)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'TerminationForBreach:'	superType=[Party]+ 'may' 'terminate' 'forBreachOf' (ObligationBreached=STRING)+ 'by' superType=[Party] ('unless' RemedialScheme=STRING)?
		public Group getGroup() { return cGroup; }
		
		//'TerminationForBreach:'
		public Keyword getTerminationForBreachKeyword_0() { return cTerminationForBreachKeyword_0; }
		
		//superType=[Party]+
		public Assignment getSuperTypeAssignment_1() { return cSuperTypeAssignment_1; }
		
		//[Party]
		public CrossReference getSuperTypePartyCrossReference_1_0() { return cSuperTypePartyCrossReference_1_0; }
		
		//ID
		public RuleCall getSuperTypePartyIDTerminalRuleCall_1_0_1() { return cSuperTypePartyIDTerminalRuleCall_1_0_1; }
		
		//'may'
		public Keyword getMayKeyword_2() { return cMayKeyword_2; }
		
		//'terminate'
		public Keyword getTerminateKeyword_3() { return cTerminateKeyword_3; }
		
		//'forBreachOf'
		public Keyword getForBreachOfKeyword_4() { return cForBreachOfKeyword_4; }
		
		//(ObligationBreached=STRING)+
		public Assignment getObligationBreachedAssignment_5() { return cObligationBreachedAssignment_5; }
		
		//STRING
		public RuleCall getObligationBreachedSTRINGTerminalRuleCall_5_0() { return cObligationBreachedSTRINGTerminalRuleCall_5_0; }
		
		//'by'
		public Keyword getByKeyword_6() { return cByKeyword_6; }
		
		//superType=[Party]
		public Assignment getSuperTypeAssignment_7() { return cSuperTypeAssignment_7; }
		
		//[Party]
		public CrossReference getSuperTypePartyCrossReference_7_0() { return cSuperTypePartyCrossReference_7_0; }
		
		//ID
		public RuleCall getSuperTypePartyIDTerminalRuleCall_7_0_1() { return cSuperTypePartyIDTerminalRuleCall_7_0_1; }
		
		//('unless' RemedialScheme=STRING)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'unless'
		public Keyword getUnlessKeyword_8_0() { return cUnlessKeyword_8_0; }
		
		//RemedialScheme=STRING
		public Assignment getRemedialSchemeAssignment_8_1() { return cRemedialSchemeAssignment_8_1; }
		
		//STRING
		public RuleCall getRemedialSchemeSTRINGTerminalRuleCall_8_1_0() { return cRemedialSchemeSTRINGTerminalRuleCall_8_1_0; }
	}
	public class OnInsolvencyEventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.OnInsolvencyEvent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTerminationUponInsolvencyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSuperTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSuperTypePartyCrossReference_1_0 = (CrossReference)cSuperTypeAssignment_1.eContents().get(0);
		private final RuleCall cSuperTypePartyIDTerminalRuleCall_1_0_1 = (RuleCall)cSuperTypePartyCrossReference_1_0.eContents().get(1);
		private final Keyword cMayKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTerminateKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cUponKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cInsolvencyEventAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cInsolvencyEventSTRINGTerminalRuleCall_5_0 = (RuleCall)cInsolvencyEventAssignment_5.eContents().get(0);
		private final Keyword cOfKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cSuperTypeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cSuperTypePartyCrossReference_7_0 = (CrossReference)cSuperTypeAssignment_7.eContents().get(0);
		private final RuleCall cSuperTypePartyIDTerminalRuleCall_7_0_1 = (RuleCall)cSuperTypePartyCrossReference_7_0.eContents().get(1);
		
		//OnInsolvencyEvent:
		//    'TerminationUponInsolvency:' superType=[Party]+ 'may' 'terminate' 'upon' (InsolvencyEvent=STRING) 'of' superType=[Party];
		@Override public ParserRule getRule() { return rule; }
		
		//'TerminationUponInsolvency:' superType=[Party]+ 'may' 'terminate' 'upon' (InsolvencyEvent=STRING) 'of' superType=[Party]
		public Group getGroup() { return cGroup; }
		
		//'TerminationUponInsolvency:'
		public Keyword getTerminationUponInsolvencyKeyword_0() { return cTerminationUponInsolvencyKeyword_0; }
		
		//superType=[Party]+
		public Assignment getSuperTypeAssignment_1() { return cSuperTypeAssignment_1; }
		
		//[Party]
		public CrossReference getSuperTypePartyCrossReference_1_0() { return cSuperTypePartyCrossReference_1_0; }
		
		//ID
		public RuleCall getSuperTypePartyIDTerminalRuleCall_1_0_1() { return cSuperTypePartyIDTerminalRuleCall_1_0_1; }
		
		//'may'
		public Keyword getMayKeyword_2() { return cMayKeyword_2; }
		
		//'terminate'
		public Keyword getTerminateKeyword_3() { return cTerminateKeyword_3; }
		
		//'upon'
		public Keyword getUponKeyword_4() { return cUponKeyword_4; }
		
		//(InsolvencyEvent=STRING)
		public Assignment getInsolvencyEventAssignment_5() { return cInsolvencyEventAssignment_5; }
		
		//STRING
		public RuleCall getInsolvencyEventSTRINGTerminalRuleCall_5_0() { return cInsolvencyEventSTRINGTerminalRuleCall_5_0; }
		
		//'of'
		public Keyword getOfKeyword_6() { return cOfKeyword_6; }
		
		//superType=[Party]
		public Assignment getSuperTypeAssignment_7() { return cSuperTypeAssignment_7; }
		
		//[Party]
		public CrossReference getSuperTypePartyCrossReference_7_0() { return cSuperTypePartyCrossReference_7_0; }
		
		//ID
		public RuleCall getSuperTypePartyIDTerminalRuleCall_7_0_1() { return cSuperTypePartyIDTerminalRuleCall_7_0_1; }
	}
	public class CustomTerminationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.CustomTermination");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTerminationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSuperTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSuperTypePartyCrossReference_1_0 = (CrossReference)cSuperTypeAssignment_1.eContents().get(0);
		private final RuleCall cSuperTypePartyIDTerminalRuleCall_1_0_1 = (RuleCall)cSuperTypePartyCrossReference_1_0.eContents().get(1);
		private final Keyword cMayKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTerminateKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cCustomTerminationClauseAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCustomTerminationClauseSTRINGTerminalRuleCall_4_0 = (RuleCall)cCustomTerminationClauseAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cByKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSuperTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cSuperTypeGivingNoticeCrossReference_5_1_0 = (CrossReference)cSuperTypeAssignment_5_1.eContents().get(0);
		private final RuleCall cSuperTypeGivingNoticeIDTerminalRuleCall_5_1_0_1 = (RuleCall)cSuperTypeGivingNoticeCrossReference_5_1_0.eContents().get(1);
		
		//CustomTermination:
		//    'Termination:' superType=[Party]+ 'may' 'terminate' CustomTerminationClause=STRING ( ('by') superType=[GivingNotice] )?;
		@Override public ParserRule getRule() { return rule; }
		
		//'Termination:' superType=[Party]+ 'may' 'terminate' CustomTerminationClause=STRING ( ('by') superType=[GivingNotice] )?
		public Group getGroup() { return cGroup; }
		
		//'Termination:'
		public Keyword getTerminationKeyword_0() { return cTerminationKeyword_0; }
		
		//superType=[Party]+
		public Assignment getSuperTypeAssignment_1() { return cSuperTypeAssignment_1; }
		
		//[Party]
		public CrossReference getSuperTypePartyCrossReference_1_0() { return cSuperTypePartyCrossReference_1_0; }
		
		//ID
		public RuleCall getSuperTypePartyIDTerminalRuleCall_1_0_1() { return cSuperTypePartyIDTerminalRuleCall_1_0_1; }
		
		//'may'
		public Keyword getMayKeyword_2() { return cMayKeyword_2; }
		
		//'terminate'
		public Keyword getTerminateKeyword_3() { return cTerminateKeyword_3; }
		
		//CustomTerminationClause=STRING
		public Assignment getCustomTerminationClauseAssignment_4() { return cCustomTerminationClauseAssignment_4; }
		
		//STRING
		public RuleCall getCustomTerminationClauseSTRINGTerminalRuleCall_4_0() { return cCustomTerminationClauseSTRINGTerminalRuleCall_4_0; }
		
		//( ('by') superType=[GivingNotice] )?
		public Group getGroup_5() { return cGroup_5; }
		
		//('by')
		public Keyword getByKeyword_5_0() { return cByKeyword_5_0; }
		
		//superType=[GivingNotice]
		public Assignment getSuperTypeAssignment_5_1() { return cSuperTypeAssignment_5_1; }
		
		//[GivingNotice]
		public CrossReference getSuperTypeGivingNoticeCrossReference_5_1_0() { return cSuperTypeGivingNoticeCrossReference_5_1_0; }
		
		//ID
		public RuleCall getSuperTypeGivingNoticeIDTerminalRuleCall_5_1_0_1() { return cSuperTypeGivingNoticeIDTerminalRuleCall_5_1_0_1; }
	}
	public class BoilerplateTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.BoilerplateType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cApplicableLawParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cJurisdictionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cNoticesParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		////Boilerplate
		//BoilerplateType:
		//    ApplicableLaw | Jurisdiction | Notices;
		@Override public ParserRule getRule() { return rule; }
		
		//ApplicableLaw | Jurisdiction | Notices
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ApplicableLaw
		public RuleCall getApplicableLawParserRuleCall_0() { return cApplicableLawParserRuleCall_0; }
		
		//Jurisdiction
		public RuleCall getJurisdictionParserRuleCall_1() { return cJurisdictionParserRuleCall_1; }
		
		//Notices
		public RuleCall getNoticesParserRuleCall_2() { return cNoticesParserRuleCall_2; }
	}
	public class ApplicableLawElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.ApplicableLaw");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cApplicableLawKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cCustomApplicableLawAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCustomApplicableLawSTRINGTerminalRuleCall_1_0 = (RuleCall)cCustomApplicableLawAssignment_1.eContents().get(0);
		private final Assignment cDefinitionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDefinitionDefinedTermParserRuleCall_2_0 = (RuleCall)cDefinitionAssignment_2.eContents().get(0);
		
		//ApplicableLaw:
		//    'ApplicableLaw:' CustomApplicableLaw=STRING (definition+=DefinedTerm)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'ApplicableLaw:' CustomApplicableLaw=STRING (definition+=DefinedTerm)?
		public Group getGroup() { return cGroup; }
		
		//'ApplicableLaw:'
		public Keyword getApplicableLawKeyword_0() { return cApplicableLawKeyword_0; }
		
		//CustomApplicableLaw=STRING
		public Assignment getCustomApplicableLawAssignment_1() { return cCustomApplicableLawAssignment_1; }
		
		//STRING
		public RuleCall getCustomApplicableLawSTRINGTerminalRuleCall_1_0() { return cCustomApplicableLawSTRINGTerminalRuleCall_1_0; }
		
		//(definition+=DefinedTerm)?
		public Assignment getDefinitionAssignment_2() { return cDefinitionAssignment_2; }
		
		//DefinedTerm
		public RuleCall getDefinitionDefinedTermParserRuleCall_2_0() { return cDefinitionDefinedTermParserRuleCall_2_0; }
	}
	public class JurisdictionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.Jurisdiction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJurisdictionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cCustomJurisdictionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCustomJurisdictionSTRINGTerminalRuleCall_1_0 = (RuleCall)cCustomJurisdictionAssignment_1.eContents().get(0);
		private final Assignment cDefinitionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDefinitionDefinedTermParserRuleCall_2_0 = (RuleCall)cDefinitionAssignment_2.eContents().get(0);
		
		//Jurisdiction:
		//    'Jurisdiction:' CustomJurisdiction=STRING (definition+=DefinedTerm)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'Jurisdiction:' CustomJurisdiction=STRING (definition+=DefinedTerm)?
		public Group getGroup() { return cGroup; }
		
		//'Jurisdiction:'
		public Keyword getJurisdictionKeyword_0() { return cJurisdictionKeyword_0; }
		
		//CustomJurisdiction=STRING
		public Assignment getCustomJurisdictionAssignment_1() { return cCustomJurisdictionAssignment_1; }
		
		//STRING
		public RuleCall getCustomJurisdictionSTRINGTerminalRuleCall_1_0() { return cCustomJurisdictionSTRINGTerminalRuleCall_1_0; }
		
		//(definition+=DefinedTerm)?
		public Assignment getDefinitionAssignment_2() { return cDefinitionAssignment_2; }
		
		//DefinedTerm
		public RuleCall getDefinitionDefinedTermParserRuleCall_2_0() { return cDefinitionDefinedTermParserRuleCall_2_0; }
	}
	public class NoticesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imperialmsc.lmw21.pactdsl.PactDSL.Notices");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNoticesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cCustomNoticeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCustomNoticeSTRINGTerminalRuleCall_1_0 = (RuleCall)cCustomNoticeAssignment_1.eContents().get(0);
		
		//Notices:
		//    'Notices:' CustomNotice=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'Notices:' CustomNotice=STRING
		public Group getGroup() { return cGroup; }
		
		//'Notices:'
		public Keyword getNoticesKeyword_0() { return cNoticesKeyword_0; }
		
		//CustomNotice=STRING
		public Assignment getCustomNoticeAssignment_1() { return cCustomNoticeAssignment_1; }
		
		//STRING
		public RuleCall getCustomNoticeSTRINGTerminalRuleCall_1_0() { return cCustomNoticeSTRINGTerminalRuleCall_1_0; }
	}
	
	
	private final ModelElements pModel;
	private final EntityTypeElements pEntityType;
	private final EffectiveDateElements pEffectiveDate;
	private final PartyElements pParty;
	private final ThirdPartyElements pThirdParty;
	private final SubjectMatterElements pSubjectMatter;
	private final FeatureElements pFeature;
	private final FeatureTypeElements pFeatureType;
	private final DefinedTermElements pDefinedTerm;
	private final AddressElements pAddress;
	private final CompanyNumberElements pCompanyNumber;
	private final CustomFeatureElements pCustomFeature;
	private final FormalityTypeElements pFormalityType;
	private final InWritingElements pInWriting;
	private final ByEmailElements pByEmail;
	private final GivingNoticeElements pGivingNotice;
	private final CustomFormalityElements pCustomFormality;
	private final ActionTypeElements pActionType;
	private final GivenConsentElements pGivenConsent;
	private final GivenWrittenConsentElements pGivenWrittenConsent;
	private final StateTypeElements pStateType;
	private final OwnershipElements pOwnership;
	private final RightToUseElements pRightToUse;
	private final PrimaryObligationTypeElements pPrimaryObligationType;
	private final PaymentObligationElements pPaymentObligation;
	private final DeliveryObligationElements pDeliveryObligation;
	private final TransferObligationElements pTransferObligation;
	private final LicenceObligationElements pLicenceObligation;
	private final ConstraintPartyElements pConstraintParty;
	private final ConstraintThirdPartyElements pConstraintThirdParty;
	private final TerminationTypeElements pTerminationType;
	private final ForConvenienceElements pForConvenience;
	private final OnReasonableNoticeElements pOnReasonableNotice;
	private final ForBreachElements pForBreach;
	private final OnInsolvencyEventElements pOnInsolvencyEvent;
	private final CustomTerminationElements pCustomTermination;
	private final BoilerplateTypeElements pBoilerplateType;
	private final ApplicableLawElements pApplicableLaw;
	private final JurisdictionElements pJurisdiction;
	private final NoticesElements pNotices;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public PactDSLGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pEntityType = new EntityTypeElements();
		this.pEffectiveDate = new EffectiveDateElements();
		this.pParty = new PartyElements();
		this.pThirdParty = new ThirdPartyElements();
		this.pSubjectMatter = new SubjectMatterElements();
		this.pFeature = new FeatureElements();
		this.pFeatureType = new FeatureTypeElements();
		this.pDefinedTerm = new DefinedTermElements();
		this.pAddress = new AddressElements();
		this.pCompanyNumber = new CompanyNumberElements();
		this.pCustomFeature = new CustomFeatureElements();
		this.pFormalityType = new FormalityTypeElements();
		this.pInWriting = new InWritingElements();
		this.pByEmail = new ByEmailElements();
		this.pGivingNotice = new GivingNoticeElements();
		this.pCustomFormality = new CustomFormalityElements();
		this.pActionType = new ActionTypeElements();
		this.pGivenConsent = new GivenConsentElements();
		this.pGivenWrittenConsent = new GivenWrittenConsentElements();
		this.pStateType = new StateTypeElements();
		this.pOwnership = new OwnershipElements();
		this.pRightToUse = new RightToUseElements();
		this.pPrimaryObligationType = new PrimaryObligationTypeElements();
		this.pPaymentObligation = new PaymentObligationElements();
		this.pDeliveryObligation = new DeliveryObligationElements();
		this.pTransferObligation = new TransferObligationElements();
		this.pLicenceObligation = new LicenceObligationElements();
		this.pConstraintParty = new ConstraintPartyElements();
		this.pConstraintThirdParty = new ConstraintThirdPartyElements();
		this.pTerminationType = new TerminationTypeElements();
		this.pForConvenience = new ForConvenienceElements();
		this.pOnReasonableNotice = new OnReasonableNoticeElements();
		this.pForBreach = new ForBreachElements();
		this.pOnInsolvencyEvent = new OnInsolvencyEventElements();
		this.pCustomTermination = new CustomTerminationElements();
		this.pBoilerplateType = new BoilerplateTypeElements();
		this.pApplicableLaw = new ApplicableLawElements();
		this.pJurisdiction = new JurisdictionElements();
		this.pNotices = new NoticesElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("imperialmsc.lmw21.pactdsl.PactDSL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//    'ContractTitle:' title=STRING '.'+
	//    'Entities:'
	//    (entityTypes+=EntityType '.')+
	//    'Formalities:'?
	//    (formalityTypes+=FormalityType '.')*
	//    'Actions:'?
	//    (actionTypes+=ActionType '.')*
	//    'StateOnSignature:'?
	//    (stateTypes+=StateType '.')*
	//    'PrimaryObligations:'
	//    (primaryObligationTypes+=PrimaryObligationType '.')+
	//    'StateAfterObligationsDischarged:'?
	//    (stateTypes+=StateType '.')*
	//    'Termination:'
	//    (terminationTypes+=TerminationType '.')*
	//    'StateAfterTermination:'?
	//    (stateTypes+=StateType '.')*
	//    'Boilerplate:'
	//    (boilerplateTypes+=BoilerplateType '.')*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	////Entity Types
	//EntityType:
	//    EffectiveDate | Party | ThirdParty | SubjectMatter;
	public EntityTypeElements getEntityTypeAccess() {
		return pEntityType;
	}
	
	public ParserRule getEntityTypeRule() {
		return getEntityTypeAccess().getRule();
	}
	
	//EffectiveDate:
	//    'EffectiveDate:' (day=INT month=INT year=INT)+;
	public EffectiveDateElements getEffectiveDateAccess() {
		return pEffectiveDate;
	}
	
	public ParserRule getEffectiveDateRule() {
		return getEffectiveDateAccess().getRule();
	}
	
	//Party:
	//    'Party:' name=ID fullname=STRING (feature+=Feature)*;
	public PartyElements getPartyAccess() {
		return pParty;
	}
	
	public ParserRule getPartyRule() {
		return getPartyAccess().getRule();
	}
	
	//ThirdParty:
	//    'ThirdParty:' name=ID fullname=STRING (feature+=Feature)*;
	public ThirdPartyElements getThirdPartyAccess() {
		return pThirdParty;
	}
	
	public ParserRule getThirdPartyRule() {
		return getThirdPartyAccess().getRule();
	}
	
	//SubjectMatter:
	//    'SubjectMatter:' name=ID subjectMatter=STRING (feature+=Feature)*;
	public SubjectMatterElements getSubjectMatterAccess() {
		return pSubjectMatter;
	}
	
	public ParserRule getSubjectMatterRule() {
		return getSubjectMatterAccess().getRule();
	}
	
	//Feature:
	//    featuretype=FeatureType;
	public FeatureElements getFeatureAccess() {
		return pFeature;
	}
	
	public ParserRule getFeatureRule() {
		return getFeatureAccess().getRule();
	}
	
	//FeatureType:
	//    DefinedTerm | Address | CompanyNumber | CustomFeature;
	public FeatureTypeElements getFeatureTypeAccess() {
		return pFeatureType;
	}
	
	public ParserRule getFeatureTypeRule() {
		return getFeatureTypeAccess().getRule();
	}
	
	//DefinedTerm:
	//    'definedAs' definition=STRING;
	public DefinedTermElements getDefinedTermAccess() {
		return pDefinedTerm;
	}
	
	public ParserRule getDefinedTermRule() {
		return getDefinedTermAccess().getRule();
	}
	
	//Address:
	//    'withAddress' definition=STRING;
	public AddressElements getAddressAccess() {
		return pAddress;
	}
	
	public ParserRule getAddressRule() {
		return getAddressAccess().getRule();
	}
	
	//CompanyNumber:
	//    'withCompanyNumber' definition=STRING;
	public CompanyNumberElements getCompanyNumberAccess() {
		return pCompanyNumber;
	}
	
	public ParserRule getCompanyNumberRule() {
		return getCompanyNumberAccess().getRule();
	}
	
	//CustomFeature:
	//    'withFeature' feature=STRING;
	public CustomFeatureElements getCustomFeatureAccess() {
		return pCustomFeature;
	}
	
	public ParserRule getCustomFeatureRule() {
		return getCustomFeatureAccess().getRule();
	}
	
	////Formality Types
	//FormalityType:
	//    InWriting | ByEmail | GivingNotice | CustomFormality;
	public FormalityTypeElements getFormalityTypeAccess() {
		return pFormalityType;
	}
	
	public ParserRule getFormalityTypeRule() {
		return getFormalityTypeAccess().getRule();
	}
	
	//InWriting:
	//    'inWriting' customWritingFormality=STRING;
	public InWritingElements getInWritingAccess() {
		return pInWriting;
	}
	
	public ParserRule getInWritingRule() {
		return getInWritingAccess().getRule();
	}
	
	//ByEmail:
	//    'byEmail' 'to' (emailAddress=STRING);
	public ByEmailElements getByEmailAccess() {
		return pByEmail;
	}
	
	public ParserRule getByEmailRule() {
		return getByEmailAccess().getRule();
	}
	
	//GivingNotice:
	//    'givingNoticeTo' superType=[Party] ('withDuration' numDays=INT 'days');
	public GivingNoticeElements getGivingNoticeAccess() {
		return pGivingNotice;
	}
	
	public ParserRule getGivingNoticeRule() {
		return getGivingNoticeAccess().getRule();
	}
	
	//CustomFormality:
	//    'ContractFormality' customFormality=STRING;
	public CustomFormalityElements getCustomFormalityAccess() {
		return pCustomFormality;
	}
	
	public ParserRule getCustomFormalityRule() {
		return getCustomFormalityAccess().getRule();
	}
	
	////Actions
	//ActionType:
	//    GivenConsent | GivenWrittenConsent;
	public ActionTypeElements getActionTypeAccess() {
		return pActionType;
	}
	
	public ParserRule getActionTypeRule() {
		return getActionTypeAccess().getRule();
	}
	
	//GivenConsent:
	//    superType=[Party] 'gaveConsent';
	public GivenConsentElements getGivenConsentAccess() {
		return pGivenConsent;
	}
	
	public ParserRule getGivenConsentRule() {
		return getGivenConsentAccess().getRule();
	}
	
	//GivenWrittenConsent:
	//    superType=[Party] 'gaveWrittenConsent';
	public GivenWrittenConsentElements getGivenWrittenConsentAccess() {
		return pGivenWrittenConsent;
	}
	
	public ParserRule getGivenWrittenConsentRule() {
		return getGivenWrittenConsentAccess().getRule();
	}
	
	////State on Signature
	//StateType:
	//    Ownership | RightToUse;
	public StateTypeElements getStateTypeAccess() {
		return pStateType;
	}
	
	public ParserRule getStateTypeRule() {
		return getStateTypeAccess().getRule();
	}
	
	//Ownership:
	//    superType=[Party] ('owns' | 'willReturn') (customOwnership=STRING)* superType=[SubjectMatter];
	public OwnershipElements getOwnershipAccess() {
		return pOwnership;
	}
	
	public ParserRule getOwnershipRule() {
		return getOwnershipAccess().getRule();
	}
	
	//RightToUse:
	//    superType=[Party] ('mayUse' | 'mayNotUse') (customUsage=STRING)* superType=[SubjectMatter];
	public RightToUseElements getRightToUseAccess() {
		return pRightToUse;
	}
	
	public ParserRule getRightToUseRule() {
		return getRightToUseAccess().getRule();
	}
	
	////PrimaryObligations
	//PrimaryObligationType:
	//    PaymentObligation | DeliveryObligation | TransferObligation | LicenceObligation | ConstraintParty | ConstraintThirdParty | CustomObligation=STRING;
	public PrimaryObligationTypeElements getPrimaryObligationTypeAccess() {
		return pPrimaryObligationType;
	}
	
	public ParserRule getPrimaryObligationTypeRule() {
		return getPrimaryObligationTypeAccess().getRule();
	}
	
	//PaymentObligation:
	//    'PaymentObligation:' superType=[Party] 'must' 'pay' (sum=INT)+ 'to' (superType=[Party])+ ( 'by' 'date' day=INT month=INT year=INT)?;
	public PaymentObligationElements getPaymentObligationAccess() {
		return pPaymentObligation;
	}
	
	public ParserRule getPaymentObligationRule() {
		return getPaymentObligationAccess().getRule();
	}
	
	//DeliveryObligation:
	//    'DeliveryObligation:' superType=[Party] 'must' 'deliver' superType=[SubjectMatter]+ 'to' superType=[Party]+ ( 'by' 'date' day=INT month=INT year=INT)?;
	public DeliveryObligationElements getDeliveryObligationAccess() {
		return pDeliveryObligation;
	}
	
	public ParserRule getDeliveryObligationRule() {
		return getDeliveryObligationAccess().getRule();
	}
	
	//TransferObligation:
	//    'TransferObligation:' superType=[Party] 'must' 'transfer' superType=[SubjectMatter]+ 'to' superType=[Party]+ ( 'by' 'date' day=INT month=INT year=INT)?;
	public TransferObligationElements getTransferObligationAccess() {
		return pTransferObligation;
	}
	
	public ParserRule getTransferObligationRule() {
		return getTransferObligationAccess().getRule();
	}
	
	//LicenceObligation:
	//    'LicenceObligation:' superType=[Party] 'must' 'grant' 'Licence' 'in' superType=[SubjectMatter]+ 'to' superType=[Party]+ ( 'by' 'date' day=INT month=INT year=INT)*;
	public LicenceObligationElements getLicenceObligationAccess() {
		return pLicenceObligation;
	}
	
	public ParserRule getLicenceObligationRule() {
		return getLicenceObligationAccess().getRule();
	}
	
	//ConstraintParty:
	//    'ConstraintParty:' superType=[Party] 'mustNot' forbiddenAction=STRING superType=[SubjectMatter]? ('to' superType=[Party])?;
	public ConstraintPartyElements getConstraintPartyAccess() {
		return pConstraintParty;
	}
	
	public ParserRule getConstraintPartyRule() {
		return getConstraintPartyAccess().getRule();
	}
	
	//ConstraintThirdParty:
	//    'ConstraintThirdParty:' superType=[Party] 'mustNot' forbiddenAction=STRING superType=[SubjectMatter]? (additionalInfo=STRING)? ('to' superType=[ThirdParty])? ('unless' 'withWrittenConsent' 'of' superType=[Party])?;
	public ConstraintThirdPartyElements getConstraintThirdPartyAccess() {
		return pConstraintThirdParty;
	}
	
	public ParserRule getConstraintThirdPartyRule() {
		return getConstraintThirdPartyAccess().getRule();
	}
	
	////Termination Types
	//TerminationType:
	//    ForConvenience | OnReasonableNotice | ForBreach | OnInsolvencyEvent | CustomTermination;
	public TerminationTypeElements getTerminationTypeAccess() {
		return pTerminationType;
	}
	
	public ParserRule getTerminationTypeRule() {
		return getTerminationTypeAccess().getRule();
	}
	
	//ForConvenience:
	//    'TerminationForConvenience:' superType=[Party]+ 'may' 'terminate' 'by' customTermination=STRING;
	public ForConvenienceElements getForConvenienceAccess() {
		return pForConvenience;
	}
	
	public ParserRule getForConvenienceRule() {
		return getForConvenienceAccess().getRule();
	}
	
	//OnReasonableNotice:
	//    'TerminationOnReasonableNotice:' superType=[Party]+ 'may' 'terminate' 'by' superType=[GivingNotice]
	//;
	public OnReasonableNoticeElements getOnReasonableNoticeAccess() {
		return pOnReasonableNotice;
	}
	
	public ParserRule getOnReasonableNoticeRule() {
		return getOnReasonableNoticeAccess().getRule();
	}
	
	//ForBreach:
	//    'TerminationForBreach:'    superType=[Party]+ 'may' 'terminate' 'forBreachOf' (ObligationBreached=STRING)+ 'by' superType=[Party] ('unless' RemedialScheme=STRING)?;
	public ForBreachElements getForBreachAccess() {
		return pForBreach;
	}
	
	public ParserRule getForBreachRule() {
		return getForBreachAccess().getRule();
	}
	
	//OnInsolvencyEvent:
	//    'TerminationUponInsolvency:' superType=[Party]+ 'may' 'terminate' 'upon' (InsolvencyEvent=STRING) 'of' superType=[Party];
	public OnInsolvencyEventElements getOnInsolvencyEventAccess() {
		return pOnInsolvencyEvent;
	}
	
	public ParserRule getOnInsolvencyEventRule() {
		return getOnInsolvencyEventAccess().getRule();
	}
	
	//CustomTermination:
	//    'Termination:' superType=[Party]+ 'may' 'terminate' CustomTerminationClause=STRING ( ('by') superType=[GivingNotice] )?;
	public CustomTerminationElements getCustomTerminationAccess() {
		return pCustomTermination;
	}
	
	public ParserRule getCustomTerminationRule() {
		return getCustomTerminationAccess().getRule();
	}
	
	////Boilerplate
	//BoilerplateType:
	//    ApplicableLaw | Jurisdiction | Notices;
	public BoilerplateTypeElements getBoilerplateTypeAccess() {
		return pBoilerplateType;
	}
	
	public ParserRule getBoilerplateTypeRule() {
		return getBoilerplateTypeAccess().getRule();
	}
	
	//ApplicableLaw:
	//    'ApplicableLaw:' CustomApplicableLaw=STRING (definition+=DefinedTerm)?;
	public ApplicableLawElements getApplicableLawAccess() {
		return pApplicableLaw;
	}
	
	public ParserRule getApplicableLawRule() {
		return getApplicableLawAccess().getRule();
	}
	
	//Jurisdiction:
	//    'Jurisdiction:' CustomJurisdiction=STRING (definition+=DefinedTerm)?;
	public JurisdictionElements getJurisdictionAccess() {
		return pJurisdiction;
	}
	
	public ParserRule getJurisdictionRule() {
		return getJurisdictionAccess().getRule();
	}
	
	//Notices:
	//    'Notices:' CustomNotice=STRING;
	public NoticesElements getNoticesAccess() {
		return pNotices;
	}
	
	public ParserRule getNoticesRule() {
		return getNoticesAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
